{
  "SaveName": "Movement Trays",
  "GameMode": "Apocalyse Movement Trays",
  "Date": "2/28/2021 1:34:29 AM",
  "VersionNumber": "v13.0.5",
  "GameType": "",
  "GameComplexity": "",
  "Tags": [],
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Table": "Table_None",
  "Sky": "Sky_Museum",
  "Note": "The movement tray sizing was based off the bases found in the \"40k Round and Oval Bases\" mod by Ardebitis.\n\nIf your models don't fit, or the trays fail to lock the models, the base and/or collider are malformed. Try replacing your models collider with fallback collider (the cylinder above the bag).",
  "Rules": "",
  "MusicPlayer": {
    "RepeatSong": true,
    "PlaylistEntry": -1,
    "CurrentAudioTitle": "Ultramarines Chant",
    "CurrentAudioURL": "http://cloud-3.steamusercontent.com/ugc/773976977327440295/17C1CAA1F70F178395E93C05E55946061E695598/",
    "AudioLibrary": [
      {
        "Item1": "http://cloud-3.steamusercontent.com/ugc/773976977327440295/17C1CAA1F70F178395E93C05E55946061E695598/",
        "Item2": "Ultramarines Chant"
      }
    ]
  },
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": false,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0
  },
  "ComponentTags": {
    "labels": []
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "TabStates": {
    "0": {
      "title": "Rules",
      "body": "",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "White",
      "body": "",
      "color": "White",
      "visibleColor": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "id": 1
    },
    "2": {
      "title": "Brown",
      "body": "",
      "color": "Brown",
      "visibleColor": {
        "r": 0.443,
        "g": 0.231,
        "b": 0.09
      },
      "id": 2
    },
    "3": {
      "title": "Red",
      "body": "",
      "color": "Red",
      "visibleColor": {
        "r": 0.856,
        "g": 0.1,
        "b": 0.094
      },
      "id": 3
    },
    "4": {
      "title": "Orange",
      "body": "",
      "color": "Orange",
      "visibleColor": {
        "r": 0.956,
        "g": 0.392,
        "b": 0.113
      },
      "id": 4
    },
    "5": {
      "title": "Yellow",
      "body": "",
      "color": "Yellow",
      "visibleColor": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.172
      },
      "id": 5
    },
    "6": {
      "title": "Green",
      "body": "",
      "color": "Green",
      "visibleColor": {
        "r": 0.192,
        "g": 0.701,
        "b": 0.168
      },
      "id": 6
    },
    "7": {
      "title": "Blue",
      "body": "",
      "color": "Blue",
      "visibleColor": {
        "r": 0.118,
        "g": 0.53,
        "b": 1.0
      },
      "id": 7
    },
    "8": {
      "title": "Teal",
      "body": "",
      "color": "Teal",
      "visibleColor": {
        "r": 0.129,
        "g": 0.694,
        "b": 0.607
      },
      "id": 8
    },
    "9": {
      "title": "Purple",
      "body": "",
      "color": "Purple",
      "visibleColor": {
        "r": 0.627,
        "g": 0.125,
        "b": 0.941
      },
      "id": 9
    },
    "10": {
      "title": "Pink",
      "body": "",
      "color": "Pink",
      "visibleColor": {
        "r": 0.96,
        "g": 0.439,
        "b": 0.807
      },
      "id": 10
    },
    "11": {
      "title": "Black",
      "body": "",
      "color": "Black",
      "visibleColor": {
        "r": 0.25,
        "g": 0.25,
        "b": 0.25
      },
      "id": 11
    }
  },
  "CameraStates": [
    {
      "Position": {
        "x": 0.0,
        "y": -2.5,
        "z": 0.0
      },
      "Rotation": {
        "x": 64.99999,
        "y": 0.0,
        "z": 0.0
      },
      "Distance": 42.75478,
      "Zoomed": false,
      "AbsolutePosition": {
        "x": -1.401298E-45,
        "y": 36.2489929,
        "z": -18.0689545
      }
    },
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "DecalPallet": [],
  "LuaScript": "--",
  "LuaScriptState": "",
  "XmlUI": "<!-- Xml UI. See documentation: https://api.tabletopsimulator.com/ui/introUI/ -->",
  "VectorLines": [
    {
      "points3": [
        {
          "x": -1.04556084,
          "y": 1.51000214,
          "z": 18.7078285
        },
        {
          "x": 0.9431533,
          "y": 1.51000214,
          "z": 18.7020454
        },
        {
          "x": 0.93860054,
          "y": 1.49524879,
          "z": 17.1362915
        },
        {
          "x": -1.05011368,
          "y": 1.49802208,
          "z": 17.1420765
        }
      ],
      "color": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": -0.9181955,
          "y": 1.51000214,
          "z": 18.8344326
        },
        {
          "x": 0.985864937,
          "y": 1.51000214,
          "z": 18.8288956
        },
        {
          "x": 0.980573535,
          "y": 1.49515343,
          "z": 17.0091228
        },
        {
          "x": -0.923487,
          "y": 1.49780846,
          "z": 17.0146618
        }
      ],
      "color": {
        "r": 1.0,
        "g": 0.0,
        "b": 0.0
      },
      "thickness": 0.1,
      "loop": true
    },
    {
      "points3": [
        {
          "x": -1.3814981,
          "y": 1.51000214,
          "z": 19.6401176
        },
        {
          "x": 1.62337434,
          "y": 1.51000214,
          "z": 19.63138
        },
        {
          "x": 1.61451292,
          "y": 1.49414444,
          "z": 16.58385
        },
        {
          "x": -1.39035988,
          "y": 1.49833488,
          "z": 16.59259
        }
      ],
      "color": {
        "r": 1.0,
        "g": 0.0,
        "b": 0.0
      },
      "thickness": 0.1,
      "loop": true
    }
  ],
  "ObjectStates": [
    {
      "GUID": "273e3e",
      "Name": "HandTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 1.99999976,
        "posZ": -24.3999786,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.315,
        "scaleY": 1.29675269,
        "scaleZ": 1.30359983
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "White",
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "afc863",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -9.0,
        "posY": -9.0,
        "posZ": -5.4,
        "rotX": 6.536436E-07,
        "rotY": -2.39176334E-05,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936100218/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "c8edca",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -9.0,
        "posY": -9.0,
        "posZ": 5.4,
        "rotX": 6.536436E-07,
        "rotY": 90.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936100218/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "393bf7",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 9.0,
        "posY": -9.0,
        "posZ": 5.4,
        "rotX": 6.536436E-07,
        "rotY": 180.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936100218/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "12c65e",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 9.0,
        "posY": -9.0,
        "posZ": -5.4,
        "rotX": 6.536436E-07,
        "rotY": 270.0,
        "rotZ": -3.84849864E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936100218/723C50F43FAB3DE3DC12CB8460536E8CB34B60A3/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 2,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "bd69bd",
      "Name": "Chinese_Checkers_Piece",
      "Transform": {
        "posX": 28.1600037,
        "posY": -0.259998322,
        "posZ": -27.52,
        "rotX": 0.00190076465,
        "rotY": 180.0,
        "rotZ": 0.000379891542,
        "scaleX": 1.6499995,
        "scaleY": 1.6499995,
        "scaleZ": 1.6499995
      },
      "Nickname": "Flex Table Control",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": false,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 1,
      "LuaScript": "tableHeightOffset = -9\n\nfunction onSave()\n    saved_data = JSON.encode({tid=tableImageData, cd=checkData})\n    --saved_data = \"\"\n    return saved_data\nend\n\nfunction onload(saved_data)\n    --Loads the tracking for if the game has started yet\n    if saved_data ~= \"\" then\n         local loaded_data = JSON.decode(saved_data)\n         tableImageData = loaded_data.tid\n         checkData = loaded_data.cd\n    else\n        tableImageData = {}\n        checkData = {move=false, scale=false}\n    end\n\n    --Disables interactable status of objects with GUID in list\n    for _, guid in ipairs(ref_noninteractable) do\n        local obj = getObjectFromGUID(guid)\n        if obj then obj.interactable = false end\n    end\n\n    --Establish references to table parts\n    obj_leg1 = getObjectFromGUID(\"afc863\")\n    obj_leg2 = getObjectFromGUID(\"c8edca\")\n    obj_leg3 = getObjectFromGUID(\"393bf7\")\n    obj_leg4 = getObjectFromGUID(\"12c65e\")\n    obj_surface = getObjectFromGUID(\"4ee1f2\")\n    obj_side_top = getObjectFromGUID(\"35b95f\")\n    obj_side_bot = getObjectFromGUID(\"f938a2\")\n    obj_side_lef = getObjectFromGUID(\"9f95fd\")\n    obj_side_rig = getObjectFromGUID(\"5af8f2\")\n\n    controlActive = false\n    createOpenCloseButton()\nend\n\n\n\n--Activation/deactivation of control panel\n\n\n\n--Activated by clicking on\nfunction click_toggleControl(_, color)\n    if permissionCheck(color) then\n        if not controlActive then\n            --Activate control panel\n            controlActive = true\n            self.clearButtons()\n            createOpenCloseButton()\n            createSurfaceInput()\n            createSurfaceButtons()\n            createScaleInput()\n            createScaleButtons()\n        else\n            --Deactivate control panel\n            controlActive = false\n            self.clearButtons()\n            self.clearInputs()\n            createOpenCloseButton()\n\n        end\n    end\nend\n\n\n\n\n--Table surface control\n\n\n\n--Changes table surface\nfunction click_applySurface(_, color)\n    if permissionCheck(color) then\n        updateSurface()\n        broadcastToAll(\"New Table Image Applied\", {0.2,0.9,0.2})\n    end\nend\n\n--Saves table surface\nfunction click_saveSurface(_, color)\n    if permissionCheck(color) then\n        local nickname = self.getInputs()[1].value\n        local url = self.getInputs()[2].value\n        if nickname == \"\" then\n            --No nickname\n            broadcastToAll(\"Please supply a nickname for this save.\", {0.9,0.2,0.2})\n        else\n            --Nickname exists\n\n            if findInImageDataIndex(url, nickname) == nil then\n                --Save doesn't exist already\n                table.insert(tableImageData, {url=url, name=nickname})\n                broadcastToAll(\"Image URL saved to memory.\", {0.2,0.9,0.2})\n                --Refresh buttons\n                self.clearButtons()\n                createOpenCloseButton()\n                createSurfaceButtons()\n                createScaleButtons()\n            else\n                --Save exists already\n                broadcastToAll(\"Memory already contains a save with this Name or URL. Delete it first.\", {0.9,0.2,0.2})\n            end\n        end\n    end\nend\n\n--Loads table surface\nfunction click_loadMemory(_, color, index)\n    if permissionCheck(color) then\n        self.editInput({index=0, value=tableImageData[index].name})\n        self.editInput({index=1, value=tableImageData[index].url})\n        updateSurface()\n        broadcastToAll(\"Table Image Loaded\", {0.2,0.9,0.2})\n    end\nend\n\n--Deletes table surface\nfunction click_deleteMemory(_, color, index)\n    if permissionCheck(color) then\n        table.remove(tableImageData, index)\n        self.clearButtons()\n        createOpenCloseButton()\n        createSurfaceButtons()\n        createScaleButtons()\n        broadcastToAll(\"Element Removed from Memory\", {0.2,0.9,0.2})\n    end\nend\n\n--Updates surface from the values in the input field\nfunction updateSurface()\n    local customInfo = obj_surface.getCustomObject()\n    customInfo.diffuse = self.getInputs()[2].value\n    obj_surface.setCustomObject(customInfo)\n    obj_surface = obj_surface.reload()\nend\n\n\n\n--Table Scale control\n\n\n\n--Applies Scale to table pieces\nfunction click_applyScale(_, color)\n    if permissionCheck(color) then\n        local newWidth = tonumber(self.getInputs()[3].value)\n        local newDepth = tonumber(self.getInputs()[4].value)\n        if type(newWidth) ~= \"number\" then\n            broadcastToAll(\"Invalid Width\", {0.9,0.2,0.2})\n            return\n        elseif type(newDepth) ~= \"number\" then\n            broadcastToAll(\"Invalid Depth\", {0.9,0.2,0.2})\n            return\n        elseif newWidth<0.1 or newDepth<0.1 then\n            broadcastToAll(\"Scale cannot go below 0.1\", {0.9,0.2,0.2})\n            return\n        elseif newWidth>12 or newDepth>12 then\n            broadcastToAll(\"Scale should not go over 12 (world size limitation)\", {0.9,0.2,0.2})\n            return\n        else\n            changeTableScale(math.abs(newWidth), math.abs(newDepth))\n            broadcastToAll(\"Scale applied.\", {0.2,0.9,0.2})\n        end\n    end\nend\n\n--Checks/unchecks move box for hands\nfunction click_checkMove(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkMove\" end\n        if checkData.move == true then\n            checkData.move = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.move = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n\n--Checks/unchecks scale box for hands\n--This button was disabled for technical reasons\n--[[\nfunction click_checkScale(_, color)\n    if permissionCheck(color) then\n        local find_func = function(o) return o.click_function==\"click_checkScale\" end\n        if checkData.scale == true then\n            checkData.scale = false\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=\"\"})\n        else\n            checkData.scale = true\n            local buttonEntry = findButton(self, find_func)\n            self.editButton({index=buttonEntry.index, label=string.char(10008)})\n        end\n    end\nend\n]]\n\n--Alters scale of elements and moves them\nfunction changeTableScale(width, depth)\n    --Scaling factors used to translate scale to position offset\n    local width2pos = (width-1) * 18\n    local depth2pos = (depth-1) * 18\n\n    --Hand zone movement\n    if checkData.move == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                moveHandZone(Player[pc], width2pos, depth2pos)\n            end\n        end\n    end\n    --Hand zone scaling\n    --The button to enable this was disabled for technical reasons\n    if checkData.scale == true then\n        for _, pc in ipairs(ref_playerColor) do\n            if Player[pc].getHandCount() > 0 then\n                scaleHandZone(Player[pc], width, depth)\n            end\n        end\n    end\n\n    --Resizing table elements\n    obj_side_top.setScale({width, 1, 1})\n    obj_side_bot.setScale({width, 1, 1})\n    obj_side_lef.setScale({depth, 1, 1})\n    obj_side_rig.setScale({depth, 1, 1})\n    obj_surface.setScale({width, 1, depth})\n\n    --Moving table elements to accomodate new scale\n    obj_side_lef.setPosition({-width2pos,tableHeightOffset,0})\n    obj_side_rig.setPosition({ width2pos,tableHeightOffset,0})\n    obj_side_top.setPosition({0,tableHeightOffset, depth2pos})\n    obj_side_bot.setPosition({0,tableHeightOffset,-depth2pos})\n    obj_leg1.setPosition({-width2pos,tableHeightOffset,-depth2pos})\n    obj_leg2.setPosition({-width2pos,tableHeightOffset, depth2pos})\n    obj_leg3.setPosition({ width2pos,tableHeightOffset, depth2pos})\n    obj_leg4.setPosition({ width2pos,tableHeightOffset,-depth2pos})\n    self.setPosition(obj_leg4.positionToWorld({-22.12, 8.74,-19.16}))\n    --Only enabled when changing tableHeightOffset\n    --obj_surface.setPosition({0,tableHeightOffset,0})\nend\n\n--Move hand zone, p=player reference, facts are scaling factors\nfunction moveHandZone(p, width2pos, depth2pos)\n    local widthX = obj_side_rig.getPosition().x\n    local depthZ = obj_side_top.getPosition().z\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local pos = handT.position\n        local y = handT.rotation.y\n\n        if y<45 or y>320 or y>135 and y<225 then\n            if pos.z > 0 then\n                pos.z = pos.z + depth2pos - depthZ\n            else\n                pos.z = pos.z - depth2pos + depthZ\n            end\n        else\n            if pos.x > 0 then\n                pos.x = pos.x + width2pos - widthX\n            else\n                pos.x = pos.x - width2pos + widthX\n            end\n        end\n\n        --Only enabled when changing tableHeightOffset\n        --pos.y = tableHeightOffset + 14\n\n        handT.position = pos\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n---Scales hand zones, p=player reference, facts are scaling factors\nfunction scaleHandZone(p, width, depth)\n    local widthFact = width / obj_side_top.getScale().x\n    local depthFact = depth / obj_side_lef.getScale().x\n    for i=1, p.getHandCount() do\n        local handT = p.getHandTransform()\n        local scale = handT.scale\n        local y = handT.rotation.y\n        if y<45 or y>320 or y>135 and y<225 then\n            scale.x = scale.x * widthFact\n        else\n            scale.x = scale.x * depthFact\n        end\n        handT.scale = scale\n        p.setHandTransform(handT, i)\n    end\nend\n\n\n\n--Information gathering\n\n\n\n--Checks if a color is promoted or host\nfunction permissionCheck(color)\n    if Player[color].host==true or Player[color].promoted==true then\n        return true\n    else\n        return false\n    end\nend\n\n--Locates a string saved within memory file\nfunction findInImageDataIndex(...)\n    for _, str in ipairs({...}) do\n        for i, v in ipairs(tableImageData) do\n            if v.url == str or v.name == str then\n                return i\n            end\n        end\n    end\n    return nil\nend\n\n--Round number (num) to the Nth decimal (dec)\nfunction round(num, dec)\n  local mult = 10^(dec or 0)\n  return math.floor(num * mult + 0.5) / mult\nend\n\n--Locates a button with a helper function\nfunction findButton(obj, func)\n    if func==nil then error(\"No func supplied to findButton\") end\n    for _, v in ipairs(obj.getButtons()) do\n        if func(v) then\n            return v\n        end\n    end\n    return nil\nend\n\n\n\n--Creation of buttons/inputs\n\n\n\nfunction createOpenCloseButton()\n    local tooltip = \"Open Table Control Panel\"\n    if controlActive then\n        tooltip = \"Close Table Control Panel\"\n    end\n    self.createButton({\n        click_function=\"click_toggleControl\", function_owner=self,\n        position={0,0,0}, rotation={-45,0,0}, height=400, width=400,\n        color={1,1,1,0}, tooltip=tooltip\n    })\nend\n\nfunction createSurfaceInput()\n    local currentURL = obj_surface.getCustomObject().diffuse\n    local nickname = \"\"\n    if findInImageDataIndex(currentURL) ~= nil then\n        nickname = tableImageData[findInImageDataIndex(currentURL)].name\n    end\n    self.createInput({\n        label=\"Nickname\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,2}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter nickname for table image (only used for save)\",\n        value=nickname\n    })\n    self.createInput({\n        label=\"URL\", input_function=\"none\", function_owner=self,\n        alignment=3, position={0,0,3}, height=224, width=4000,\n        font_size=200, tooltip=\"Enter URL for tabletop image\",\n        value=currentURL\n    })\nend\n\nfunction createSurfaceButtons()\n    --Label\n    self.createButton({\n        label=\"Tabletop Surface Image\", click_function=\"none\",\n        position={0,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Functional\n    self.createButton({\n        label=\"Apply Image\\nTo Table\", click_function=\"click_applySurface\",\n        function_owner=self, tooltip=\"Apply URL as table image\",\n        position={2,0,4}, height=440, width=1400, font_size=200,\n    })\n    self.createButton({\n        label=\"Save Image\\nTo Memory\", click_function=\"click_saveSurface\",\n        function_owner=self, tooltip=\"Record URL into memory (requires nickname)\",\n        position={-2,0,4}, height=440, width=1400, font_size=200,\n    })\n    --Label\n    self.createButton({\n        label=\"Load From Memory\", click_function=\"none\",\n        position={0,0,5.5}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    --Saves, created dynamically from memory file\n    for i, memoryEntry in ipairs(tableImageData) do\n        --Load\n        local funcName = i..\"loadMemory\"\n        local func = function(x,y) click_loadMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=memoryEntry.name, click_function=funcName,\n            function_owner=self, tooltip=memoryEntry.url, font_size=200,\n            position={-0.6,0,6.5+0.5*(i-1)}, height=240, width=3300,\n        })\n        --Delete\n        local funcName = i..\"deleteMemory\"\n        local func = function(x,y) click_deleteMemory(x,y,i) end\n        self.setVar(funcName, func)\n        self.createButton({\n            label=\"DELETE\", click_function=funcName,\n            function_owner=self, tooltip=\"\",\n            position={3.6,0,6.5+0.5*(i-1)}, height=240, width=600,\n            font_size=160, font_color={1,0,0}, color={0.8,0.8,0.8}\n        })\n    end\nend\n\nfunction createScaleInput()\n    self.createInput({\n        label=string.char(8644), input_function=\"none\", function_owner=self,\n        alignment=3, position={-8.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Width\",\n        value=round(obj_side_top.getScale().x, 1)\n    })\n    self.createInput({\n        label=string.char(8645), input_function=\"none\", function_owner=self,\n        alignment=3, position={-7.5,0,2}, height=224, width=400,\n        font_size=200, tooltip=\"Table Depth\",\n        value=round(obj_side_lef.getScale().x, 1)\n    })\nend\n\nfunction createScaleButtons()\n    --Labels\n    self.createButton({\n        label=\"Table Scale\", click_function=\"none\",\n        position={-8,0,1}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=string.char(8644)..\"            \"..string.char(8645),\n        click_function=\"none\",\n        position={-8,0,2}, height=0, width=0, font_size=300, font_color={1,1,1}\n    })\n    self.createButton({\n        label=\"Move Hands:\", click_function=\"none\",\n        position={-8.3,0,3}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    --Disabled due to me removing the feature for technical reasons\n    --[[\n    self.createButton({\n        label=\"Scale Hands:\", click_function=\"none\",\n        position={-8.3,0,4}, height=0, width=0, font_size=200, font_color={1,1,1}\n    })\n    ]]\n    --Checkboxes\n    local label = \"\"\n    if checkData.move == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkMove\",\n        function_owner=self, tooltip=\"Check to move hands when table is rescaled\",\n        position={-6.8,0,3}, height=224, width=224, font_size=200,\n    })\n    --[[\n    local label = \"\"\n    if checkData.scale == true then label = string.char(10008) end\n    self.createButton({\n        label=label, click_function=\"click_checkScale\",\n        function_owner=self, tooltip=\"Check to scale the width of hands when table is rescaled\",\n        position={-6.8,0,4}, height=224, width=224, font_size=200,\n    })\n    ]]\n    --Apply button\n    self.createButton({\n        label=\"Apply Scale\", click_function=\"click_applyScale\",\n        function_owner=self, tooltip=\"Apply width/depth to table\",\n        position={-8,0,4}, height=440, width=1400, font_size=200,\n    })\nend\n\n\n\n\n\n--Data tables\n\n\n\n\nref_noninteractable = {\n    \"afc863\",\"c8edca\",\"393bf7\",\"12c65e\",\"f938a2\",\"9f95fd\",\"35b95f\",\n    \"5af8f2\",\"4ee1f2\",\"bd69bd\"\n}\n\nref_playerColor = {\n    \"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\",\n    \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Black\"\n}\n\n--Dummy function, absorbs unwanted triggers\nfunction none() end",
      "LuaScriptState": "{\"cd\":{\"move\":true,\"scale\":false},\"tid\":[{\"name\":\"Felt - Green\",\"url\":\"http://cloud-3.steamusercontent.com/ugc/1018320153795068598/FF91D48AB5415E01B8E9EFF7E2421C05AE05ACD2/\"},{\"name\":\"Felt - Red\",\"url\":\"http://cloud-3.steamusercontent.com/ugc/1018320153795309227/76366CE0E933214A24710553DB94CEEDB3A4F629/\"},{\"name\":\"Felt - Grey\",\"url\":\"http://cloud-3.steamusercontent.com/ugc/1018320153795312023/7A32A39FD692F3CEE69729A5B7E2C6AF1D00970E/\"}]}",
      "XmlUI": ""
    },
    {
      "GUID": "f938a2",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": -5.4,
        "rotX": -1.01777751E-13,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.5,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936101101/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "9f95fd",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": -9.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 1.3,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936101101/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "35b95f",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": 5.4,
        "rotX": -1.01777751E-13,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.5,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936101101/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5af8f2",
      "Name": "Custom_Assetbundle",
      "Transform": {
        "posX": 9.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.3,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomAssetbundle": {
        "AssetbundleURL": "http://cloud-3.steamusercontent.com/ugc/786374678936101101/14ED0DBD593370733A0309B0950004F33EB9FACA/",
        "AssetbundleSecondaryURL": "",
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "LoopingEffectIndex": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "4ee1f2",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.0,
        "posY": -9.0,
        "posZ": 0.0,
        "rotX": 359.983124,
        "rotY": -0.00189453643,
        "rotZ": 359.920135,
        "scaleX": 1.5,
        "scaleY": 1.0,
        "scaleZ": 1.3
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": true,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678936101335/4A5A65543B98BCFBF57E910D06EC984208223D38/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/786374678935714292/1B4B7192FBCE0176269DFE5643383A881CB5BAFA/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.0,
          "SpecularSharpness": 2.0,
          "FresnelStrength": 0.0
        },
        "CastShadows": true
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "e931a9",
      "Name": "Bag",
      "Transform": {
        "posX": -0.315806925,
        "posY": 1.30082059,
        "posZ": 13.2593718,
        "rotX": 359.983124,
        "rotY": 0.0007752345,
        "rotZ": 359.920044,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Movement Tray Bag",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 0.7058823,
        "g": 0.366520882,
        "b": 0.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": -1,
      "MeshIndex": -1,
      "Bag": {
        "Order": 0
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": "",
      "ContainedObjects": [
        {
          "GUID": "32c6c9",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 30.3679333,
            "posY": 2.599787,
            "posZ": 4.599427,
            "rotX": 0.0167397726,
            "rotY": 89.99955,
            "rotZ": -0.00353904138,
            "scaleX": 0.5,
            "scaleY": 1.00000012,
            "scaleZ": 0.5
          },
          "Nickname": "xxx-Round - 1 Slot",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738131/EDB3F4722E6BAC5D688E72A244D88F87227A7382/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": ""
        },
        {
          "GUID": "e695a8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 22.94012,
            "posY": 2.610374,
            "posZ": 3.41155934,
            "rotX": 359.9831,
            "rotY": 0.0009996315,
            "rotZ": 359.920135,
            "scaleX": 0.51,
            "scaleY": 1.0,
            "scaleZ": 0.51
          },
          "Nickname": "xxx-25mm+60mm - 4+1 Slots \t- \tCircle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738250/7C99AB524B22AB33922E69D971C575608735176A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738412/A08D1EB5988C0467214633064972D6FFEC11318B/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 2.5337913,
                "y": 0.014955245,
                "z": 2.527838
              }
            },
            {
              "Position": {
                "x": 3.592037,
                "y": 0.0154198762,
                "z": -0.00165100151
              }
            },
            {
              "Position": {
                "x": -0.0006083416,
                "y": 0.0148601513,
                "z": 0.00010780985
              }
            },
            {
              "Position": {
                "x": 2.53051472,
                "y": 0.015367778,
                "z": -2.56167483
              }
            },
            {
              "Position": {
                "x": -3.575394,
                "y": 0.0149933854,
                "z": 0.0110716326
              }
            },
            {
              "Position": {
                "x": 0.009711203,
                "y": 0.0149151608,
                "z": 3.58653855
              }
            },
            {
              "Position": {
                "x": -2.53524017,
                "y": 0.0150093762,
                "z": -2.544864
              }
            },
            {
              "Position": {
                "x": 0.00412429543,
                "y": 0.01514378,
                "z": -3.589753
              }
            },
            {
              "Position": {
                "x": -2.552997,
                "y": 0.0147069292,
                "z": 2.53388834
              }
            }
          ]
        },
        {
          "GUID": "a5d440",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 22.80835,
            "posY": 2.61256647,
            "posZ": 10.2381678,
            "rotX": 359.983124,
            "rotY": 0.0008344297,
            "rotZ": 359.9201,
            "scaleX": 0.51,
            "scaleY": 1.0,
            "scaleZ": 0.51
          },
          "Nickname": "xxx-25mm+60mm - 8+1 Slots \t- \tCircle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738412/A08D1EB5988C0467214633064972D6FFEC11318B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 2.5337913,
                "y": 0.014955245,
                "z": 2.527838
              }
            },
            {
              "Position": {
                "x": 3.592037,
                "y": 0.0154198762,
                "z": -0.00165100151
              }
            },
            {
              "Position": {
                "x": -0.0006083416,
                "y": 0.0148601513,
                "z": 0.00010780985
              }
            },
            {
              "Position": {
                "x": 2.53051472,
                "y": 0.015367778,
                "z": -2.56167483
              }
            },
            {
              "Position": {
                "x": -3.575394,
                "y": 0.0149933854,
                "z": 0.0110716326
              }
            },
            {
              "Position": {
                "x": 0.009711203,
                "y": 0.0149151608,
                "z": 3.58653855
              }
            },
            {
              "Position": {
                "x": -2.53524017,
                "y": 0.0150093762,
                "z": -2.544864
              }
            },
            {
              "Position": {
                "x": 0.00412429543,
                "y": 0.01514378,
                "z": -3.589753
              }
            },
            {
              "Position": {
                "x": -2.552997,
                "y": 0.0147069292,
                "z": 2.53388834
              }
            }
          ]
        },
        {
          "GUID": "bb88c5",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 5.83899832,
            "posY": 3.487825,
            "posZ": 8.730778,
            "rotX": 0.006033489,
            "rotY": 179.999985,
            "rotZ": 0.02856594,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "621-60x35mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "c43424",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3682,
            "posY": 2.959708,
            "posZ": 0.122351967,
            "rotX": 7.98988867,
            "rotY": 225.206619,
            "rotZ": 2.29238844,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a53-120x92mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "2a75af",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.22792,
            "posY": 1.70252311,
            "posZ": 1.63776278,
            "rotX": 357.0641,
            "rotY": 225.131073,
            "rotZ": 0.867090344,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "123-25mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "ecf705",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3231907,
            "posY": 2.50233126,
            "posZ": 1.72680867,
            "rotX": 2.05930424,
            "rotY": 225.04422,
            "rotZ": 2.18175888,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a23-120x92mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "03e8f7",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2413149,
            "posY": 1.47341931,
            "posZ": 1.64384592,
            "rotX": 0.172059208,
            "rotY": 225.0675,
            "rotZ": 0.12711978,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "941-105x70mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "af2ead",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.23801,
            "posY": 1.616121,
            "posZ": 1.63754189,
            "rotX": 358.097321,
            "rotY": 225.0301,
            "rotZ": 359.862,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "721-75x42mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "8bb7a0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2784357,
            "posY": 2.39465523,
            "posZ": 1.68076885,
            "rotX": 0.9838309,
            "rotY": 225.069717,
            "rotZ": 2.79850864,
            "scaleX": 0.82,
            "scaleY": 0.9999996,
            "scaleZ": 0.82
          },
          "Nickname": "312-40mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "4533c8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2829895,
            "posY": 2.20127535,
            "posZ": 1.6858319,
            "rotX": 357.788727,
            "rotY": 225.0179,
            "rotZ": 3.50706673,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "252-32mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "d36ea4",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2770176,
            "posY": 2.27710342,
            "posZ": 1.68247819,
            "rotX": 358.57666,
            "rotY": 225.003922,
            "rotZ": 3.751674,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "411-50mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "8c7fc0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2623444,
            "posY": 1.97885621,
            "posZ": 1.67716885,
            "rotX": 356.722748,
            "rotY": 225.040039,
            "rotZ": 1.482594,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "843-90x52mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "cc82ed",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2101316,
            "posY": 1.53943992,
            "posZ": 1.59986651,
            "rotX": 359.5195,
            "rotY": 224.959534,
            "rotZ": 0.185707644,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "141-25mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "cdbcc2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.249629,
            "posY": 1.76803827,
            "posZ": 1.66128933,
            "rotX": 357.21283,
            "rotY": 224.939972,
            "rotZ": 1.21925855,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "933-105x70mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "cf0171",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2347832,
            "posY": 1.73143756,
            "posZ": 1.65135145,
            "rotX": 357.022369,
            "rotY": 224.928238,
            "rotZ": 1.25426412,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "313-40mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "15f4d9",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2653227,
            "posY": 2.45465755,
            "posZ": 1.66766953,
            "rotX": 1.51562607,
            "rotY": 225.081924,
            "rotZ": 2.50162363,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "331-40mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "065fe9",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2176809,
            "posY": 1.57772541,
            "posZ": 1.61510515,
            "rotX": 358.630646,
            "rotY": 224.991226,
            "rotZ": 0.214618519,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "232-32mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "b8d890",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2846756,
            "posY": 1.8124001,
            "posZ": 1.69471,
            "rotX": 357.156464,
            "rotY": 224.910721,
            "rotZ": 1.11443782,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "932-105x70mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "fa44ee",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2316313,
            "posY": 1.50942087,
            "posZ": 1.61880445,
            "rotX": 359.6096,
            "rotY": 224.981979,
            "rotZ": 0.15765886,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "541-60mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "d8030f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2353477,
            "posY": 1.46137857,
            "posZ": 1.64024889,
            "rotX": 0.126504,
            "rotY": 225.0723,
            "rotZ": 0.163701534,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.05
          },
          "Nickname": "b51-70x25mm Bike - 10 Slot - Ranks)",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741104/BB5003EC432ACB2D088036653B9F3965A856185D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741215/684D4D50D670F2AC41518BA9DC809DAF1B500A05/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.34527922,
                "y": 0.00202379376,
                "z": -1.32174563
              }
            },
            {
              "Position": {
                "x": -1.83367276,
                "y": 0.00220547523,
                "z": 1.30325449
              }
            },
            {
              "Position": {
                "x": -1.30800033,
                "y": 0.00155366946,
                "z": -1.32174993
              }
            },
            {
              "Position": {
                "x": -0.799409032,
                "y": 0.00183702074,
                "z": 1.30325568
              }
            },
            {
              "Position": {
                "x": -0.244147122,
                "y": 0.0016261494,
                "z": -1.32174325
              }
            },
            {
              "Position": {
                "x": 0.253451318,
                "y": 0.0014879934,
                "z": 1.30325687
              }
            },
            {
              "Position": {
                "x": 0.7877657,
                "y": 0.0007109724,
                "z": -1.32173836
              }
            },
            {
              "Position": {
                "x": 1.29280651,
                "y": 0.0005492617,
                "z": 1.30325806
              }
            },
            {
              "Position": {
                "x": 1.82639062,
                "y": 0.000516679138,
                "z": -1.32171869
              }
            },
            {
              "Position": {
                "x": 2.38483357,
                "y": 0.000366714026,
                "z": 1.30325925
              }
            }
          ]
        },
        {
          "GUID": "7f1dd7",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.321743,
            "posY": 2.71116948,
            "posZ": 1.71978533,
            "rotX": 3.79872918,
            "rotY": 225.030548,
            "rotZ": 2.473734,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "831-90x52mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "0a0a75",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2566671,
            "posY": 2.00096631,
            "posZ": 1.67328429,
            "rotX": 356.39328,
            "rotY": 225.015442,
            "rotZ": 1.57032537,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "921-105x70mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "7ea6f6",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2653847,
            "posY": 1.83748281,
            "posZ": 1.68298125,
            "rotX": 356.956,
            "rotY": 224.904587,
            "rotZ": 1.14478731,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "752-75x42mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "467b43",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2376614,
            "posY": 1.49099052,
            "posZ": 1.63581169,
            "rotX": 0.1525788,
            "rotY": 224.845932,
            "rotZ": 0.3082966,
            "scaleX": 0.4999998,
            "scaleY": 0.9999996,
            "scaleZ": 0.4999998
          },
          "Nickname": "112-25mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "c0bab5",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2385206,
            "posY": 1.74871135,
            "posZ": 1.65225923,
            "rotX": 357.1692,
            "rotY": 224.928619,
            "rotZ": 1.25992727,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "743-75x42mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "ce9d1d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.322793,
            "posY": 2.5690577,
            "posZ": 1.73473287,
            "rotX": 2.92854619,
            "rotY": 224.987076,
            "rotZ": 2.06423235,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b11-70x25mm Bike - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741353/C9030C2CCABE9A486BFFC66ED7C5076BF490C8D3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741452/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -0.548332453,
                "y": -0.007844331,
                "z": 1.21515071
              }
            },
            {
              "Position": {
                "x": 0.5287181,
                "y": -0.00807161,
                "z": 1.23240864
              }
            },
            {
              "Position": {
                "x": -0.000410686946,
                "y": -0.007973878,
                "z": -1.38121462
              }
            }
          ]
        },
        {
          "GUID": "85e253",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2257328,
            "posY": 1.66411293,
            "posZ": 1.620268,
            "rotX": 357.919,
            "rotY": 224.968231,
            "rotZ": 0.4970588,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "642-60x35mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "deb96f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2315025,
            "posY": 1.52640128,
            "posZ": 1.61964083,
            "rotX": 359.6113,
            "rotY": 224.961624,
            "rotZ": 0.1898309,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "751-75x42mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "dd2a2e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2623663,
            "posY": 2.10878825,
            "posZ": 1.67380762,
            "rotX": 357.3997,
            "rotY": 225.026855,
            "rotZ": 1.93844545,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a22-120x92mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "9ab7b0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2458191,
            "posY": 1.48153615,
            "posZ": 1.63863361,
            "rotX": 0.0538214371,
            "rotY": 225.0643,
            "rotZ": 0.130655751,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a33-120x92mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "6a60eb",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.28492,
            "posY": 2.09049177,
            "posZ": 1.68944871,
            "rotX": 357.4234,
            "rotY": 225.0174,
            "rotZ": 1.97333586,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "421-50mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "6a307b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2564449,
            "posY": 1.79594064,
            "posZ": 1.67710412,
            "rotX": 357.266144,
            "rotY": 224.9098,
            "rotZ": 1.13237977,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a31-120x92mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "6fa33e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3032265,
            "posY": 2.21758676,
            "posZ": 1.708406,
            "rotX": 357.788544,
            "rotY": 225.022308,
            "rotZ": 3.45645761,
            "scaleX": 1.39,
            "scaleY": 0.9999996,
            "scaleZ": 2.1
          },
          "Nickname": "912-105x70mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "6d4f06",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2953606,
            "posY": 1.89316571,
            "posZ": 1.71017015,
            "rotX": 357.311432,
            "rotY": 224.92897,
            "rotZ": 1.46954834,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a52-120x92mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "1982f1",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2304592,
            "posY": 1.45035875,
            "posZ": 1.62733722,
            "rotX": 0.62823683,
            "rotY": 225.111359,
            "rotZ": 0.0239447318,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "633-60x35mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "fc18df",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3054724,
            "posY": 2.43544149,
            "posZ": 1.70897686,
            "rotX": 1.36258638,
            "rotY": 225.075638,
            "rotZ": 2.51810169,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "531-60mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "7d144b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2324362,
            "posY": 1.44507742,
            "posZ": 1.63106751,
            "rotX": 0.661293745,
            "rotY": 225.070053,
            "rotZ": 0.205017149,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b23-70x25mm Bike - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742137/52DD45B58ACA8FC734B5C1DF6EDD38B056AEC3B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742256/377E599411AFC99B1B151C2BDFEC9F69CE60AFC6/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.10590386,
                "y": -0.006737693,
                "z": -0.009039238
              }
            },
            {
              "Position": {
                "x": -1.04943442,
                "y": -0.00646602735,
                "z": -0.009308136
              }
            },
            {
              "Position": {
                "x": 0.00479013938,
                "y": -0.00646984437,
                "z": -0.009576484
              }
            },
            {
              "Position": {
                "x": 1.05210793,
                "y": -0.006385599,
                "z": -0.00984306447
              }
            },
            {
              "Position": {
                "x": 2.10226464,
                "y": -0.00624094438,
                "z": -0.0101103652
              }
            }
          ]
        },
        {
          "GUID": "97311f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8186808,
            "posY": 3.11229825,
            "posZ": 3.41907859,
            "rotX": 6.41235065,
            "rotY": 225.165665,
            "rotZ": 2.772421,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "352-40mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "4858ad",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8419123,
            "posY": 3.415136,
            "posZ": 3.41060066,
            "rotX": 6.96105051,
            "rotY": 225.1566,
            "rotZ": 2.08954954,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "151-25mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "546ce7",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8749952,
            "posY": 3.18545413,
            "posZ": 3.44696522,
            "rotX": 6.20128441,
            "rotY": 225.141479,
            "rotZ": 2.13466954,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "722-75x42mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "3124d3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8513927,
            "posY": 3.26907754,
            "posZ": 3.426067,
            "rotX": 7.02707052,
            "rotY": 225.142639,
            "rotZ": 2.18488359,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "341-40mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "d2c9f9",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.837944,
            "posY": 3.47265244,
            "posZ": 3.4041574,
            "rotX": 7.661514,
            "rotY": 225.18309,
            "rotZ": 2.10997677,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "242-32mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "a318a8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8443127,
            "posY": 4.039004,
            "posZ": 3.37146,
            "rotX": 10.2740812,
            "rotY": 225.299026,
            "rotZ": 2.97254,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "332-40mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "73321b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8610563,
            "posY": 3.034662,
            "posZ": 3.44952416,
            "rotX": 6.07537,
            "rotY": 225.155075,
            "rotZ": 2.893243,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "551-60mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "df546f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.867939,
            "posY": 3.37857819,
            "posZ": 3.43202972,
            "rotX": 7.198813,
            "rotY": 225.1447,
            "rotZ": 1.98568821,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "852-90x52mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "4ea1f6",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8630571,
            "posY": 3.55653572,
            "posZ": 3.40860271,
            "rotX": 7.432062,
            "rotY": 225.151321,
            "rotZ": 2.28513,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "422-50mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "97ce08",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8542461,
            "posY": 3.45025778,
            "posZ": 3.41234565,
            "rotX": 8.026305,
            "rotY": 225.1805,
            "rotZ": 2.10056639,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "233-32mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "42937f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8192759,
            "posY": 2.98239541,
            "posZ": 3.41866517,
            "rotX": 5.96791172,
            "rotY": 225.086853,
            "rotZ": 1.69869888,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "xxx-70x25mm Bike - 1 Slot",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742357/33A88AC85197FC0B32C4F6CF74DD6CAEBEF1979F/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742493/ECB153043F5F0383401EB879EDB8A9162FD9A6E3/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "",
          "LuaScriptState": "",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.79642476E-05,
                "y": 0.1000354,
                "z": 1.01298156E-05
              }
            }
          ]
        },
        {
          "GUID": "77a998",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.7780638,
            "posY": 1.77181339,
            "posZ": 3.4054606,
            "rotX": 357.3318,
            "rotY": 224.962677,
            "rotZ": 1.34021878,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b42-70x25mm Bike - 9 Slot  - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742596/293E8E01135C3320D047B56E71483423C3B8231D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742714/10A5DBEDADC574BF2A6A34A160E140B5374CC3BD/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.09366822,
                "y": 0.00363081717,
                "z": -0.0108776987
              }
            },
            {
              "Position": {
                "x": -1.03742254,
                "y": 0.00358991534,
                "z": 1.38335359
              }
            },
            {
              "Position": {
                "x": 0.0106586292,
                "y": 0.00350188324,
                "z": 2.77857065
              }
            },
            {
              "Position": {
                "x": 0.0106581822,
                "y": 0.00342090661,
                "z": -0.00271501951
              }
            },
            {
              "Position": {
                "x": 1.04911435,
                "y": 0.00353343,
                "z": 1.38335311
              }
            },
            {
              "Position": {
                "x": 2.08991766,
                "y": 0.00366075616,
                "z": -0.0108784791
              }
            },
            {
              "Position": {
                "x": 1.049114,
                "y": 0.00353896967,
                "z": -1.39004719
              }
            },
            {
              "Position": {
                "x": 0.0106429793,
                "y": 0.00364441983,
                "z": -2.773389
              }
            },
            {
              "Position": {
                "x": -1.0374229,
                "y": 0.00369214523,
                "z": -1.38836861
              }
            }
          ]
        },
        {
          "GUID": "2ca59b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8547688,
            "posY": 3.39580655,
            "posZ": 3.43291879,
            "rotX": 7.14630842,
            "rotY": 225.151825,
            "rotZ": 1.98559892,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "731-75x42mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "df3066",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8777819,
            "posY": 3.320864,
            "posZ": 3.44541526,
            "rotX": 7.15599632,
            "rotY": 225.133026,
            "rotZ": 1.94285822,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "821-90x52mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "ed127a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8336182,
            "posY": 3.71074963,
            "posZ": 3.36533546,
            "rotX": 8.526377,
            "rotY": 225.2555,
            "rotZ": 2.17880273,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "213-32mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "ae3c4a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8669062,
            "posY": 3.2885716,
            "posZ": 3.44782662,
            "rotX": 7.05674744,
            "rotY": 225.142715,
            "rotZ": 2.1825664,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "723-75x42mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "b85484",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8052025,
            "posY": 2.59630013,
            "posZ": 3.4121716,
            "rotX": 0.08456327,
            "rotY": 225.007568,
            "rotZ": 2.16162133,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "222-32mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "9c4347",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8436041,
            "posY": 2.81503773,
            "posZ": 3.439936,
            "rotX": 3.11526465,
            "rotY": 225.052292,
            "rotZ": 2.65985775,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "823-90x52mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "309576",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.7843637,
            "posY": 2.01936746,
            "posZ": 3.39780331,
            "rotX": 359.364471,
            "rotY": 225.094635,
            "rotZ": 1.95059943,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b43-70x25mm Bike - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742843/9EBFBAF1B0AB874997F1A2D33EAE2DB63A66760D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742977/9D43D8D16B7A4A38C1F5DBFF2577349416191806/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.168857,
                "y": 0.00334398542,
                "z": 0.008088594
              }
            },
            {
              "Position": {
                "x": -3.11807656,
                "y": 0.00339920353,
                "z": 0.008088271
              }
            },
            {
              "Position": {
                "x": -2.0845356,
                "y": 0.003258683,
                "z": 0.008087935
              }
            },
            {
              "Position": {
                "x": -1.05176473,
                "y": 0.003169071,
                "z": 0.008087603
              }
            },
            {
              "Position": {
                "x": -0.0118818861,
                "y": 0.00309510133,
                "z": 0.008087271
              }
            },
            {
              "Position": {
                "x": 1.03456664,
                "y": 0.003058936,
                "z": 0.008086939
              }
            },
            {
              "Position": {
                "x": 2.0741086,
                "y": 0.00283627631,
                "z": 0.008086594
              }
            },
            {
              "Position": {
                "x": 3.11972833,
                "y": 0.00262163416,
                "z": 0.008086247
              }
            },
            {
              "Position": {
                "x": 4.16596842,
                "y": 0.0008485002,
                "z": 0.00610137545
              }
            }
          ]
        },
        {
          "GUID": "5a2bac",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8194113,
            "posY": 3.12734985,
            "posZ": 3.40928936,
            "rotX": 6.3999176,
            "rotY": 225.165756,
            "rotZ": 2.754957,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "632-60x35mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "094e2c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.7727642,
            "posY": 2.00136638,
            "posZ": 3.37904358,
            "rotX": 359.537476,
            "rotY": 225.0924,
            "rotZ": 1.94387078,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "243-32mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "cf8d7f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8597441,
            "posY": 3.05444312,
            "posZ": 3.44931626,
            "rotX": 5.94960165,
            "rotY": 225.146225,
            "rotZ": 2.88803625,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "451-50mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "4dffd0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.7876005,
            "posY": 1.85517788,
            "posZ": 3.40697,
            "rotX": 357.011353,
            "rotY": 225.052643,
            "rotZ": 1.3222028,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a41-120x92mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "8eb736",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8130465,
            "posY": 3.14957976,
            "posZ": 3.41087627,
            "rotX": 6.31388235,
            "rotY": 225.155716,
            "rotZ": 2.56829357,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.05
          },
          "Nickname": "b52-70x25mm Bike - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743106/3F7609F7479A5A54386FE9C7CA4823B713FDAB21/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743233/22CD91CE002B87C3E381619A69F08B7CE2C85A18/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -0.0164975878,
                "y": -0.00212381943,
                "z": -2.6437037
              }
            },
            {
              "Position": {
                "x": -1.04984534,
                "y": 0.00237006112,
                "z": -2.64342022
              }
            },
            {
              "Position": {
                "x": -1.59575069,
                "y": -0.000953776238,
                "z": -0.00128402235
              }
            },
            {
              "Position": {
                "x": -0.5335679,
                "y": -0.005501372,
                "z": 0.00346923154
              }
            },
            {
              "Position": {
                "x": 0.5601266,
                "y": 0.004186517,
                "z": 0.00733721629
              }
            },
            {
              "Position": {
                "x": 1.58735991,
                "y": -0.001973951,
                "z": -0.0017695626
              }
            },
            {
              "Position": {
                "x": 1.045513,
                "y": -0.00292555313,
                "z": 2.64212942
              }
            },
            {
              "Position": {
                "x": 0.000397595519,
                "y": 9.207426E-05,
                "z": 2.6420722
              }
            },
            {
              "Position": {
                "x": -1.04340482,
                "y": -0.00117540162,
                "z": 2.641999
              }
            },
            {
              "Position": {
                "x": 1.062136,
                "y": 0.00189628336,
                "z": -2.64477754
              }
            }
          ]
        },
        {
          "GUID": "418dee",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.85938,
            "posY": 3.641691,
            "posZ": 3.40824652,
            "rotX": 8.356826,
            "rotY": 225.196167,
            "rotZ": 2.15776229,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "412-50mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "a48408",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8695545,
            "posY": 3.60259318,
            "posZ": 3.41013527,
            "rotX": 8.343752,
            "rotY": 225.200668,
            "rotZ": 2.20546031,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "523-60mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "2e7ed2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8369465,
            "posY": 3.066655,
            "posZ": 3.43066239,
            "rotX": 5.949082,
            "rotY": 225.145721,
            "rotZ": 2.88787723,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "431-50mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "a0c88b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 15.8206615,
            "posY": 3.16300774,
            "posZ": 3.41646361,
            "rotX": 6.28799248,
            "rotY": 225.149048,
            "rotZ": 2.22558427,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b22-70x25mm Bike - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743343/D323CFDF0E3F93F7BA49FE8033B53EB805249678/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743451/CDD62E0D96630F80E0FA6838D5DDC2F19A7CC932/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00517926225,
                "y": 0.01219064,
                "z": -1.9025923
              }
            },
            {
              "Position": {
                "x": 0.0182460137,
                "y": 0.0122187091,
                "z": 0.012406325
              }
            },
            {
              "Position": {
                "x": -1.04515231,
                "y": 0.0120618911,
                "z": 0.0124071548
              }
            },
            {
              "Position": {
                "x": 1.0897727,
                "y": 0.0121725574,
                "z": 0.0124054672
              }
            },
            {
              "Position": {
                "x": 0.017110467,
                "y": 0.0120131215,
                "z": 1.93425024
              }
            }
          ]
        },
        {
          "GUID": "2a0372",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3526955,
            "posY": 3.26991439,
            "posZ": 0.0993621051,
            "rotX": 8.705307,
            "rotY": 225.242447,
            "rotZ": 2.76991773,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "942-105x70mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "5cd55c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3692627,
            "posY": 3.06456542,
            "posZ": 0.188768834,
            "rotX": 8.668376,
            "rotY": 225.214691,
            "rotZ": 2.132571,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b41-70x25mm Bike - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743552/9C7B9CBC367AA068D9BF59A64E0966A07F88F3B0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743695/7C7957B4831D53FA488B89B2FB6A420457C72A4D/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.105678,
                "y": 0.00459744874,
                "z": 1.16969788
              }
            },
            {
              "Position": {
                "x": -1.57797086,
                "y": 0.00450347271,
                "z": -1.45530272
              }
            },
            {
              "Position": {
                "x": -1.03091979,
                "y": 0.004429962,
                "z": 1.16969717
              }
            },
            {
              "Position": {
                "x": -0.5294427,
                "y": 0.004618501,
                "z": -1.45530438
              }
            },
            {
              "Position": {
                "x": -0.007994047,
                "y": 0.00451311748,
                "z": 1.16969669
              }
            },
            {
              "Position": {
                "x": 0.519903541,
                "y": 0.00466195075,
                "z": -1.45530486
              }
            },
            {
              "Position": {
                "x": 1.04694223,
                "y": 0.00450462941,
                "z": 1.16969609
              }
            },
            {
              "Position": {
                "x": 2.1225183,
                "y": 0.00457169442,
                "z": 1.16969538
              }
            },
            {
              "Position": {
                "x": 1.56203854,
                "y": 0.004591512,
                "z": -1.45530462
              }
            }
          ]
        },
        {
          "GUID": "4a13ae",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3367949,
            "posY": 3.24709058,
            "posZ": 0.08850854,
            "rotX": 8.63942051,
            "rotY": 225.222076,
            "rotZ": 2.7533462,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "552-60mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "4b97b0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.1810226,
            "posY": 3.91692352,
            "posZ": -0.197859079,
            "rotX": 10.6374216,
            "rotY": 225.080948,
            "rotZ": 1.15014434,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "321-40mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "916b02",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2519865,
            "posY": 3.69999075,
            "posZ": -0.06637403,
            "rotX": 8.997686,
            "rotY": 225.053055,
            "rotZ": 1.74778652,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "512-60mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "8833bb",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3769007,
            "posY": 3.102883,
            "posZ": 0.142416716,
            "rotX": 8.527159,
            "rotY": 225.241974,
            "rotZ": 2.17713642,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a51-120x92mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "319314",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3379383,
            "posY": 2.780276,
            "posZ": 0.168048441,
            "rotX": 6.03511524,
            "rotY": 225.093079,
            "rotZ": 1.96296823,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "351-40mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "0e6f7f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.294569,
            "posY": 3.41687965,
            "posZ": 0.0228767954,
            "rotX": 9.500547,
            "rotY": 225.2435,
            "rotZ": 2.57135248,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "853-90x52mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "89fc87",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2946959,
            "posY": 3.13208771,
            "posZ": 0.03799813,
            "rotX": 8.46984,
            "rotY": 225.2123,
            "rotZ": 2.235641,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "522-60mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "8f19af",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.1686516,
            "posY": 3.79113317,
            "posZ": -0.208335236,
            "rotX": 8.706909,
            "rotY": 225.084946,
            "rotZ": 0.739253461,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "152-25mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "d18779",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2771921,
            "posY": 3.38782644,
            "posZ": 0.01263367,
            "rotX": 9.016471,
            "rotY": 225.22995,
            "rotZ": 2.5832057,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "413-50mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "a6f0f6",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2752924,
            "posY": 3.42484665,
            "posZ": -0.0374766923,
            "rotX": 9.525452,
            "rotY": 225.2421,
            "rotZ": 2.599636,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "952-105x70mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "9de11b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.1846685,
            "posY": 3.743045,
            "posZ": -0.182075709,
            "rotX": 8.687287,
            "rotY": 225.059143,
            "rotZ": 0.9566363,
            "scaleX": 0.67,
            "scaleY": 0.9999996,
            "scaleZ": 0.67
          },
          "Nickname": "211-32mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "890409",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2932873,
            "posY": 3.543126,
            "posZ": -0.002425823,
            "rotX": 9.589268,
            "rotY": 225.20517,
            "rotZ": 2.14332247,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "922-105x70mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "0a13c6",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2046337,
            "posY": 3.61547256,
            "posZ": -0.131052732,
            "rotX": 9.224778,
            "rotY": 225.177917,
            "rotZ": 1.82310641,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "342-40mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "1fd64f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3699541,
            "posY": 3.198265,
            "posZ": 0.136160284,
            "rotX": 8.607694,
            "rotY": 225.233109,
            "rotZ": 2.676509,
            "scaleX": 1.82,
            "scaleY": 0.9999996,
            "scaleZ": 2.37
          },
          "Nickname": "a12-120x92mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "c66b53",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2232437,
            "posY": 3.73792458,
            "posZ": -0.118615985,
            "rotX": 8.701418,
            "rotY": 225.07428,
            "rotZ": 0.9035385,
            "scaleX": 0.74,
            "scaleY": 0.9999996,
            "scaleZ": 1.23
          },
          "Nickname": "611-60x35mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "92d888",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.188158,
            "posY": 3.82080841,
            "posZ": -0.176287353,
            "rotX": 9.195822,
            "rotY": 225.054688,
            "rotZ": 0.547469556,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "113-25mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "367d1c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2781143,
            "posY": 3.48249054,
            "posZ": -0.03324639,
            "rotX": 9.244392,
            "rotY": 225.220413,
            "rotZ": 2.33543134,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a21-120x92mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "c45514",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2906,
            "posY": 3.30890226,
            "posZ": 0.027786525,
            "rotX": 9.431438,
            "rotY": 225.273834,
            "rotZ": 2.79235053,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "553-60mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "2921c5",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2575989,
            "posY": 3.45456672,
            "posZ": -0.033712,
            "rotX": 9.547361,
            "rotY": 225.219437,
            "rotZ": 2.40934443,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "513-60mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "5f18ad",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3754625,
            "posY": 3.07766819,
            "posZ": 0.181111932,
            "rotX": 8.452162,
            "rotY": 225.201462,
            "rotZ": 2.19327259,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "733-75x42mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "15b392",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2080526,
            "posY": 3.78400588,
            "posZ": -0.145382583,
            "rotX": 8.751631,
            "rotY": 225.044632,
            "rotZ": 0.665435731,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "322-40mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "90c855",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2561293,
            "posY": 3.55477118,
            "posZ": -0.0482223742,
            "rotX": 9.383882,
            "rotY": 225.206818,
            "rotZ": 2.18412948,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "453-50mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "9ffd0a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.34915,
            "posY": 3.21737623,
            "posZ": 0.112693757,
            "rotX": 8.70648,
            "rotY": 225.2158,
            "rotZ": 2.69611883,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "452-50mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "77116d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2924957,
            "posY": 3.103952,
            "posZ": 0.00114056468,
            "rotX": 8.397486,
            "rotY": 225.2442,
            "rotZ": 2.149455,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a32-120x92mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "058a23",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.1427364,
            "posY": 3.98844147,
            "posZ": -0.24923259,
            "rotX": 10.5224867,
            "rotY": 225.10321,
            "rotZ": 0.8459043,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "133-25mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "2d708c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3582258,
            "posY": 3.17707849,
            "posZ": 0.144411355,
            "rotX": 8.689215,
            "rotY": 225.242661,
            "rotZ": 2.24764681,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b12-70x25mm Bike - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741353/C9030C2CCABE9A486BFFC66ED7C5076BF490C8D3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743819/075DC149FE6BC91396799B51630D855047D084DE/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -0.548332453,
                "y": -0.007844331,
                "z": 1.21515071
              }
            },
            {
              "Position": {
                "x": 0.5287181,
                "y": -0.00807161,
                "z": 1.23240864
              }
            },
            {
              "Position": {
                "x": -0.000410686946,
                "y": -0.007973878,
                "z": -1.38121462
              }
            }
          ]
        },
        {
          "GUID": "232856",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3650055,
            "posY": 3.37413669,
            "posZ": 0.142936319,
            "rotX": 8.866578,
            "rotY": 225.224472,
            "rotZ": 2.07585025,
            "scaleX": 0.87,
            "scaleY": 0.9999996,
            "scaleZ": 1.52
          },
          "Nickname": "712-75x42mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "7a6c05",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.226799,
            "posY": 3.87342978,
            "posZ": -0.1336367,
            "rotX": 10.7563429,
            "rotY": 225.0908,
            "rotZ": 1.102769,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "433-50mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "3b90c0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.1626148,
            "posY": 3.89008427,
            "posZ": -0.2165216,
            "rotX": 10.7008247,
            "rotY": 225.098816,
            "rotZ": 1.26647949,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "221-32mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "4fbe4a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2864933,
            "posY": 2.900423,
            "posZ": 0.06842243,
            "rotX": 8.319001,
            "rotY": 225.206512,
            "rotZ": 2.324011,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "241-32mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "270bb3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3138065,
            "posY": 2.73844886,
            "posZ": 0.125057131,
            "rotX": 6.23299551,
            "rotY": 224.991669,
            "rotZ": 1.8965342,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "651-60x35mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "db5ac2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2677851,
            "posY": 3.6829946,
            "posZ": -0.0530737042,
            "rotX": 8.913076,
            "rotY": 225.278015,
            "rotZ": 1.798802,
            "scaleX": 1.04,
            "scaleY": 0.9999996,
            "scaleZ": 1.83
          },
          "Nickname": "811-90x52mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "ffd814",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2111568,
            "posY": 3.634375,
            "posZ": -0.136527911,
            "rotX": 8.982323,
            "rotY": 225.248627,
            "rotZ": 1.8349086,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "323-40mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "9846f1",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2343788,
            "posY": 3.57452178,
            "posZ": -0.09856783,
            "rotX": 9.34116,
            "rotY": 225.203751,
            "rotZ": 1.94543576,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "631-60x35mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "d8e533",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3143349,
            "posY": 3.28118157,
            "posZ": 0.054226,
            "rotX": 8.818951,
            "rotY": 225.2547,
            "rotZ": 2.77996,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "943-105x70mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "db01f9",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3634462,
            "posY": 2.93442631,
            "posZ": 0.16736339,
            "rotX": 8.318968,
            "rotY": 225.208328,
            "rotZ": 2.324269,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "432-50mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "f34a30",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.37756,
            "posY": 3.03122449,
            "posZ": 0.169831634,
            "rotX": 8.836481,
            "rotY": 225.224213,
            "rotZ": 2.259687,
            "scaleX": 1.39,
            "scaleY": 0.9999996,
            "scaleZ": 2.1
          },
          "Nickname": "911-105x70mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "df97ce",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.3706608,
            "posY": 2.890697,
            "posZ": 0.192000046,
            "rotX": 8.350662,
            "rotY": 225.1713,
            "rotZ": 1.97233415,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b33-70x25mm Bike - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939743919/700930453EB5EF4672EF2502D073BA83594E1C0E/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744024/9C26A9EE27DCB8F033FC82554991DC3E7791BC9B/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.63827634,
                "y": 0.008340649,
                "z": 0.006732044
              }
            },
            {
              "Position": {
                "x": -1.60635662,
                "y": 0.008265491,
                "z": 0.00673136441
              }
            },
            {
              "Position": {
                "x": -0.555646,
                "y": 0.00826614,
                "z": 0.00673067663
              }
            },
            {
              "Position": {
                "x": 0.5375289,
                "y": 0.008323805,
                "z": 0.006729965
              }
            },
            {
              "Position": {
                "x": 1.58979475,
                "y": 0.00829917751,
                "z": 0.006729275
              }
            },
            {
              "Position": {
                "x": 2.64640737,
                "y": 0.008232718,
                "z": 0.00672858
              }
            }
          ]
        },
        {
          "GUID": "928d36",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.2266359,
            "posY": 3.51056623,
            "posZ": -0.07220698,
            "rotX": 9.558094,
            "rotY": 225.281723,
            "rotZ": 2.15084672,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "251-32mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "82d330",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6131248,
            "posY": 4.22398329,
            "posZ": -0.6607447,
            "rotX": 10.9283257,
            "rotY": 225.077515,
            "rotZ": 0.6927807,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "622-60x35mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "5fbf3d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6835146,
            "posY": 4.010934,
            "posZ": -0.574718952,
            "rotX": 10.48688,
            "rotY": 225.085587,
            "rotZ": 1.08188319,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "741-75x42mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "b4fe32",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.7051964,
            "posY": 3.93959475,
            "posZ": -0.540411,
            "rotX": 10.3790655,
            "rotY": 225.127975,
            "rotZ": 0.929606557,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "833-90x52mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "c5a065",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.683485,
            "posY": 4.15983057,
            "posZ": -0.569713235,
            "rotX": 10.5404224,
            "rotY": 225.091415,
            "rotZ": 0.5053337,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "511-60mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "bf3a2c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6413088,
            "posY": 4.17583942,
            "posZ": -0.6304819,
            "rotX": 10.7181435,
            "rotY": 225.082077,
            "rotZ": 0.5956504,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "753-75x42mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "5a6770",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6716242,
            "posY": 3.480731,
            "posZ": -0.5931394,
            "rotX": 9.238117,
            "rotY": 225.182159,
            "rotZ": 1.70804048,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "842-90x52mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "257311",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6682005,
            "posY": 3.96276569,
            "posZ": -0.5954101,
            "rotX": 10.4529362,
            "rotY": 225.173141,
            "rotZ": 0.955792367,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "851-90x52mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "5b34ef",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6585388,
            "posY": 3.98422718,
            "posZ": -0.603107035,
            "rotX": 10.4794912,
            "rotY": 225.061356,
            "rotZ": 1.04669535,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "652-60x35mm - 10 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739739/D7C0915412DAFF3ADD1E08B58E55C0100A2B7DE0/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739859/F5CFDB146F240D877A04F936BA0DB2A37386BBA8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -3.12652516,
                "y": 0.0150610246,
                "z": -0.016254494
              }
            },
            {
              "Position": {
                "x": -2.085222,
                "y": 0.015108875,
                "z": 1.82587957
              }
            },
            {
              "Position": {
                "x": -1.02650082,
                "y": 0.0148092657,
                "z": 0.0436311364
              }
            },
            {
              "Position": {
                "x": -2.10389233,
                "y": 0.0151768364,
                "z": -1.83274031
              }
            },
            {
              "Position": {
                "x": 0.0442121625,
                "y": 0.0149359321,
                "z": -1.832409
              }
            },
            {
              "Position": {
                "x": 1.06056678,
                "y": 0.0150377974,
                "z": -0.009149948
              }
            },
            {
              "Position": {
                "x": 0.012313704,
                "y": 0.01525516,
                "z": 1.83820951
              }
            },
            {
              "Position": {
                "x": 2.12344623,
                "y": 0.014920271,
                "z": 1.82865226
              }
            },
            {
              "Position": {
                "x": 3.181465,
                "y": 0.014816124,
                "z": -0.0248049889
              }
            },
            {
              "Position": {
                "x": 2.134836,
                "y": 0.0149725517,
                "z": -1.82295632
              }
            }
          ]
        },
        {
          "GUID": "d9c5f2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.71175,
            "posY": 3.95821762,
            "posZ": -0.535004,
            "rotX": 10.3909788,
            "rotY": 225.166443,
            "rotZ": 0.951913238,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a13-120x92mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "3a8494",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.5813093,
            "posY": 4.347225,
            "posZ": -0.6976143,
            "rotX": 11.1262589,
            "rotY": 225.054062,
            "rotZ": 0.392493129,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "153-25mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "4b39df",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.691843,
            "posY": 3.76044655,
            "posZ": -0.566048265,
            "rotX": 10.75336,
            "rotY": 225.096817,
            "rotZ": 1.10347593,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "951-105x70mm - 10 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741708/BD3D728A1F1C95C58CB18928CDB5B38CE6CE4979/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741818/170E279E2DF28DF2CEA969CC3CC347909CD0D2A0/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.654306,
                "y": 0.0149487387,
                "z": 0.9021137
              }
            },
            {
              "Position": {
                "x": -3.682684,
                "y": 0.0148093095,
                "z": -0.9178934
              }
            },
            {
              "Position": {
                "x": -2.533181,
                "y": 0.0153014483,
                "z": 0.902096152
              }
            },
            {
              "Position": {
                "x": -1.53810394,
                "y": 0.0145415626,
                "z": -0.917847633
              }
            },
            {
              "Position": {
                "x": -0.4361931,
                "y": 0.0149730751,
                "z": 0.9020822
              }
            },
            {
              "Position": {
                "x": 0.6196429,
                "y": 0.0147416219,
                "z": -0.9179256
              }
            },
            {
              "Position": {
                "x": 1.66523361,
                "y": 0.01512595,
                "z": 0.9020666
              }
            },
            {
              "Position": {
                "x": 2.71545458,
                "y": 0.01488867,
                "z": -0.917941153
              }
            },
            {
              "Position": {
                "x": 3.769453,
                "y": 0.0152017381,
                "z": 0.9020509
              }
            },
            {
              "Position": {
                "x": 4.80822945,
                "y": 0.0150139295,
                "z": -0.9179567
              }
            }
          ]
        },
        {
          "GUID": "489d77",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.59638,
            "posY": 4.302686,
            "posZ": -0.68209,
            "rotX": 11.0379868,
            "rotY": 225.058441,
            "rotZ": 0.362781227,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "343-40mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "29c817",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6164312,
            "posY": 4.32482147,
            "posZ": -0.660206437,
            "rotX": 11.0776625,
            "rotY": 225.055008,
            "rotZ": 0.370808244,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "713-75x42mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "ec5c44",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6456633,
            "posY": 4.19695473,
            "posZ": -0.622878432,
            "rotX": 10.8065243,
            "rotY": 225.065933,
            "rotZ": 0.608935535,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "813-90x52mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "b6a28f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6156092,
            "posY": 4.28988075,
            "posZ": -0.6598528,
            "rotX": 10.9571819,
            "rotY": 225.057343,
            "rotZ": 0.363599956,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "423-50mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "fe5f18",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6287594,
            "posY": 4.20733929,
            "posZ": -0.6457753,
            "rotX": 10.8061514,
            "rotY": 225.065247,
            "rotZ": 0.599480748,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "443-50mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "dfa0c1",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.6773453,
            "posY": 4.18016672,
            "posZ": -0.5757559,
            "rotX": 10.6339331,
            "rotY": 225.090744,
            "rotZ": 0.5972007,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b53-70x25mm Bike - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 0.0,
            "b": 0.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744131/ED1064D28A8B036D2E4E7CF87456FC8F9A1F22C2/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744262/A7492DFE270DBE6000329BEA288C57A674A3D960/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 2.621925,
                "y": 0.000109284178,
                "z": -0.00667367
              }
            },
            {
              "Position": {
                "x": 4.698629,
                "y": 0.000205537726,
                "z": -0.0005358238
              }
            },
            {
              "Position": {
                "x": 0.518751562,
                "y": 1.074114E-05,
                "z": -0.000491510436
              }
            },
            {
              "Position": {
                "x": -0.5219354,
                "y": -2.745802E-05,
                "z": -0.0004804746
              }
            },
            {
              "Position": {
                "x": -1.60396409,
                "y": -0.000157541654,
                "z": -0.000469025923
              }
            },
            {
              "Position": {
                "x": -2.61363077,
                "y": -0.000431506254,
                "z": -0.000458385883
              }
            },
            {
              "Position": {
                "x": 1.57040262,
                "y": -0.000195398461,
                "z": -0.0005027316
              }
            },
            {
              "Position": {
                "x": 3.65025783,
                "y": 0.000152383334,
                "z": -0.0005247106
              }
            },
            {
              "Position": {
                "x": -3.663289,
                "y": 0.00484893564,
                "z": 0.00242857076
              }
            },
            {
              "Position": {
                "x": -4.70551252,
                "y": 0.004980882,
                "z": 0.00273196539
              }
            }
          ]
        },
        {
          "GUID": "8b8dd8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.5623264,
            "posY": 3.87560558,
            "posZ": -0.710134268,
            "rotX": 10.2917757,
            "rotY": 225.125854,
            "rotZ": 0.8931398,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a42-120x92mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "598c5a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.468173,
            "posY": 4.231218,
            "posZ": -0.828624666,
            "rotX": 10.9571133,
            "rotY": 225.063568,
            "rotZ": 0.36483565,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "841-90x52mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "bf3e96",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.4401817,
            "posY": 4.289575,
            "posZ": -0.8564723,
            "rotX": 11.0913877,
            "rotY": 225.0557,
            "rotZ": 0.388542354,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "353-40mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "3165f0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 12.4930925,
            "posY": 4.33845329,
            "posZ": -0.785720348,
            "rotX": 11.1812029,
            "rotY": 225.0603,
            "rotZ": 0.393530339,
            "scaleX": 0.82,
            "scaleY": 1.0,
            "scaleZ": 0.82
          },
          "Nickname": "333-40mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "1e6b56",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 13.5807047,
            "posY": 4.06799459,
            "posZ": -2.91813612,
            "rotX": 10.9571514,
            "rotY": 225.057053,
            "rotZ": 0.363594472,
            "scaleX": 1.82,
            "scaleY": 1.0,
            "scaleZ": 2.37
          },
          "Nickname": "a43-120x92mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "1541f4",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.87415648,
            "posY": 3.0118556,
            "posZ": 0.0555010736,
            "rotX": 357.8514,
            "rotY": 239.983582,
            "rotZ": 359.9857,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "953-105x70mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "ffb0fa",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.41210222,
            "posY": 3.18672228,
            "posZ": -1.37636328,
            "rotX": 356.232117,
            "rotY": 239.987732,
            "rotZ": 0.4348239,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "223-32mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "7770b7",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.42813325,
            "posY": 3.23193455,
            "posZ": -1.36649537,
            "rotX": 356.012146,
            "rotY": 239.9985,
            "rotZ": 0.442234963,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "643-60x35mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "06da02",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.421687,
            "posY": 3.20341969,
            "posZ": -1.36674011,
            "rotX": 356.274719,
            "rotY": 239.983,
            "rotZ": 0.425606847,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "441-50mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "6dcec0",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 3.42911887,
            "posY": 3.30340266,
            "posZ": -1.37357056,
            "rotX": 358.1094,
            "rotY": 239.975464,
            "rotZ": 0.465657383,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b31-70x25mm Bike - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744376/395028BB4D6151115571E7C892CCA4A0CA6C923D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744471/0EFD121CD7C63B5EBB98B13F53E2CD89E46F4C75/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -0.7771447,
                "y": 0.0210641157,
                "z": 1.30856586
              }
            },
            {
              "Position": {
                "x": 0.2551713,
                "y": 0.0210801624,
                "z": 1.30856586
              }
            },
            {
              "Position": {
                "x": 1.33120954,
                "y": 0.02109164,
                "z": 1.30856586
              }
            },
            {
              "Position": {
                "x": 0.8043556,
                "y": 0.0207977965,
                "z": -1.33566487
              }
            },
            {
              "Position": {
                "x": -0.272995651,
                "y": 0.0210138652,
                "z": -1.33566487
              }
            },
            {
              "Position": {
                "x": -1.30287611,
                "y": 0.0209901165,
                "z": -1.33566487
              }
            }
          ]
        },
        {
          "GUID": "cd4776",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.920524,
            "posY": 3.42059445,
            "posZ": 0.0573271327,
            "rotX": 358.370544,
            "rotY": 239.9914,
            "rotZ": 359.8258,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "253-32mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "82d01e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.82689428,
            "posY": 3.10396266,
            "posZ": 0.01962763,
            "rotX": 358.283081,
            "rotY": 239.983826,
            "rotZ": 0.042420432,
            "scaleX": 0.67,
            "scaleY": 1.0,
            "scaleZ": 0.67
          },
          "Nickname": "231-32mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "547e3e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.83843231,
            "posY": 3.2101388,
            "posZ": 0.0209978241,
            "rotX": 359.247162,
            "rotY": 239.982849,
            "rotZ": 359.517639,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "142-25mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "997522",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.8081,
            "posY": 3.133129,
            "posZ": 0.012932485,
            "rotX": 359.0987,
            "rotY": 239.990265,
            "rotZ": 0.2102494,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "143-25mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "0bdc60",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.109309,
            "posY": 3.71908164,
            "posZ": 0.126215577,
            "rotX": 359.7652,
            "rotY": 239.9802,
            "rotZ": 0.0130549883,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "542-60mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "c0dcb7",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.11348152,
            "posY": 3.69604135,
            "posZ": 0.1301981,
            "rotX": 359.8306,
            "rotY": 239.987732,
            "rotZ": 0.04918964,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "923-105x70mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "f173ce",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.090268,
            "posY": 3.627516,
            "posZ": 0.122223116,
            "rotX": 359.798431,
            "rotY": 239.988159,
            "rotZ": 0.0492281653,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "613-60x35mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "f516f5",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.011186,
            "posY": 3.44916439,
            "posZ": 0.101096995,
            "rotX": 359.1091,
            "rotY": 239.986816,
            "rotZ": 359.8767,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "533-60mm - 6 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740185/FEF9092E8D65F3C330C0DB7CDF65D96E54518429/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740282/83E17D32E60C1B1424DC761AF544C377EBCD2A59/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -5.257658,
                "y": 0.0148529736,
                "z": -0.0284525976
              }
            },
            {
              "Position": {
                "x": -3.17128587,
                "y": 0.0146790091,
                "z": -0.0218482334
              }
            },
            {
              "Position": {
                "x": -1.05444384,
                "y": 0.0151239866,
                "z": -0.0151470583
              }
            },
            {
              "Position": {
                "x": 1.06209409,
                "y": 0.0151790576,
                "z": -0.008447072
              }
            },
            {
              "Position": {
                "x": 3.147688,
                "y": 0.0150524713,
                "z": -0.00184514467
              }
            },
            {
              "Position": {
                "x": 5.25511551,
                "y": 0.0153130312,
                "z": 0.00482612336
              }
            }
          ]
        },
        {
          "GUID": "376c2a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.076901,
            "posY": 3.47259855,
            "posZ": 0.111459196,
            "rotX": 359.443146,
            "rotY": 239.993073,
            "rotZ": 359.858551,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "532-60mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "a73ed2",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.854179,
            "posY": 3.26400375,
            "posZ": 0.0325740054,
            "rotX": 359.065979,
            "rotY": 239.979126,
            "rotZ": 359.909271,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "742-75x42mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "5cbdc8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.90363,
            "posY": 3.24252534,
            "posZ": 0.048733972,
            "rotX": 359.025818,
            "rotY": 239.987915,
            "rotZ": 359.8623,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "623-60x35mm - 5 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739090/877726CF93AADB9FC0D68CC32999FF5C247214B5/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739190/BFED8DF2FB966C2571EA9059BF6EE4AE0B9507DA/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 4.207803,
                "y": 0.0150772287,
                "z": -0.0134815425
              }
            },
            {
              "Position": {
                "x": 0.0202214122,
                "y": 0.0155182919,
                "z": -0.0242325887
              }
            },
            {
              "Position": {
                "x": -4.2146287,
                "y": 0.0148436641,
                "z": -0.0176852476
              }
            },
            {
              "Position": {
                "x": -2.10217,
                "y": 0.0149945216,
                "z": -0.0176842082
              }
            },
            {
              "Position": {
                "x": 2.09096527,
                "y": 0.01473241,
                "z": -0.0176827777
              }
            }
          ]
        },
        {
          "GUID": "e1609a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.857547,
            "posY": 3.08233,
            "posZ": 0.0403852165,
            "rotX": 358.4383,
            "rotY": 239.977234,
            "rotZ": 0.176174417,
            "scaleX": 0.74,
            "scaleY": 0.9999996,
            "scaleZ": 1.23
          },
          "Nickname": "612-60x35mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "d012a3",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.058312,
            "posY": 3.73679876,
            "posZ": 0.100042135,
            "rotX": 359.835876,
            "rotY": 239.983948,
            "rotZ": 0.06798354,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "122-25mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "7766ea",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.82158375,
            "posY": 3.05012918,
            "posZ": 0.0293801427,
            "rotX": 358.078125,
            "rotY": 239.979843,
            "rotZ": 0.336976022,
            "scaleX": 0.87,
            "scaleY": 0.9999996,
            "scaleZ": 1.52
          },
          "Nickname": "711-75x42mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "340229",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.84803343,
            "posY": 2.99662519,
            "posZ": 0.0439266339,
            "rotX": 357.805023,
            "rotY": 239.983429,
            "rotZ": 359.984131,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "653-60x35mm - 10 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738884/19DFA82450994B913C738D71EB01978F991C9623/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738993/BF8F82CC5CAB219B98ABBF6C3447E3B022AAE699/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -9.454259,
                "y": 0.0148767885,
                "z": 0.01322023
              }
            },
            {
              "Position": {
                "x": -7.33853531,
                "y": 0.0152006978,
                "z": 0.005294486
              }
            },
            {
              "Position": {
                "x": -5.252899,
                "y": 0.0147174839,
                "z": -0.0004458993
              }
            },
            {
              "Position": {
                "x": -3.145691,
                "y": 0.0153166726,
                "z": -0.0205069855
              }
            },
            {
              "Position": {
                "x": -1.02308393,
                "y": 0.0151021229,
                "z": 0.02510337
              }
            },
            {
              "Position": {
                "x": 1.067144,
                "y": 0.0148600545,
                "z": 0.009629924
              }
            },
            {
              "Position": {
                "x": 3.15967441,
                "y": 0.015184693,
                "z": -0.0223512929
              }
            },
            {
              "Position": {
                "x": 5.261178,
                "y": 0.0151239652,
                "z": -0.008093838
              }
            },
            {
              "Position": {
                "x": 7.352947,
                "y": 0.0148580847,
                "z": -0.0294238124
              }
            },
            {
              "Position": {
                "x": 9.452528,
                "y": 0.0147163933,
                "z": -0.00550759025
              }
            }
          ]
        },
        {
          "GUID": "fc8ffe",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.074866,
            "posY": 3.7754,
            "posZ": 0.104228221,
            "rotX": 359.7585,
            "rotY": 239.979431,
            "rotZ": 0.040570423,
            "scaleX": 0.82,
            "scaleY": 0.9999996,
            "scaleZ": 0.82
          },
          "Nickname": "311-40mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "440832",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.112465,
            "posY": 3.791339,
            "posZ": 0.124725558,
            "rotX": 359.7296,
            "rotY": 239.987091,
            "rotZ": 0.0815934762,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "521-60mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "5de42a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.113722,
            "posY": 3.75621653,
            "posZ": 0.132337764,
            "rotX": 359.7494,
            "rotY": 239.990753,
            "rotZ": 0.04598758,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "822-90x52mm - 5 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741929/788C70C54160026722BE7CD9651F00D12AB69E55/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742030/51B64CDEB1E124A37B231C722442F4E86B45BBA6/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.47277081,
                "y": 0.0150056034,
                "z": -1.50146747
              }
            },
            {
              "Position": {
                "x": -1.48430133,
                "y": 0.0151989367,
                "z": 1.46803832
              }
            },
            {
              "Position": {
                "x": 0.0120435636,
                "y": 0.0149200941,
                "z": -0.00971062947
              }
            },
            {
              "Position": {
                "x": 1.49168432,
                "y": 0.0151270013,
                "z": 1.46215272
              }
            },
            {
              "Position": {
                "x": 1.50252867,
                "y": 0.0147882048,
                "z": -1.49722886
              }
            }
          ]
        },
        {
          "GUID": "f1b5e4",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.83711624,
            "posY": 3.38018727,
            "posZ": 0.0189392939,
            "rotX": 358.7365,
            "rotY": 239.983948,
            "rotZ": 0.145217374,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "121-25mm - 5 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738644/0F0DC9278B642B5DBF5C09C35A03C74803EDBDC1/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738752/41EB2EC3C0A0E52EF4C270E4592E770D3526EF66/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.097672,
                "y": 0.0150130037,
                "z": 0.734607756
              }
            },
            {
              "Position": {
                "x": -0.0152955651,
                "y": 0.0150055988,
                "z": 0.7345992
              }
            },
            {
              "Position": {
                "x": 2.07662153,
                "y": 0.0149898427,
                "z": 0.7345949
              }
            },
            {
              "Position": {
                "x": 1.05423832,
                "y": 0.01500872,
                "z": -1.12535167
              }
            },
            {
              "Position": {
                "x": -1.071866,
                "y": 0.0150157213,
                "z": -1.12542987
              }
            }
          ]
        },
        {
          "GUID": "e8ecd8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.8663516,
            "posY": 3.16179132,
            "posZ": 0.04060787,
            "rotX": 359.5538,
            "rotY": 239.988281,
            "rotZ": 0.07871689,
            "scaleX": 1.23,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "543-60mm - 9 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739970/20407135024255019C801BC9DE36B9A76F494DDE/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740078/576BB2DAE1062695DD5B75B6595EB27E24EA0AF5/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -8.416736,
                "y": 0.0146795036,
                "z": -0.00733232265
              }
            },
            {
              "Position": {
                "x": -6.29234552,
                "y": 0.0150556471,
                "z": -0.0073403907
              }
            },
            {
              "Position": {
                "x": -4.20344448,
                "y": 0.0146815423,
                "z": -0.00734876236
              }
            },
            {
              "Position": {
                "x": -2.09614277,
                "y": 0.0146935089,
                "z": -0.00735697849
              }
            },
            {
              "Position": {
                "x": -0.00297096628,
                "y": 0.0147940926,
                "z": -0.007365087
              }
            },
            {
              "Position": {
                "x": 2.11859775,
                "y": 0.0147900172,
                "z": -0.007373368
              }
            },
            {
              "Position": {
                "x": 4.21515656,
                "y": 0.014993337,
                "z": -0.00738142943
              }
            },
            {
              "Position": {
                "x": 6.310283,
                "y": 0.0146209495,
                "z": -0.00738982437
              }
            },
            {
              "Position": {
                "x": 8.386946,
                "y": 0.0143616963,
                "z": -0.00739808
              }
            }
          ]
        },
        {
          "GUID": "662af5",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.112198,
            "posY": 3.678972,
            "posZ": 0.131876737,
            "rotX": 359.829926,
            "rotY": 239.98764,
            "rotZ": 0.07913515,
            "scaleX": 1.82,
            "scaleY": 0.9999996,
            "scaleZ": 2.37
          },
          "Nickname": "a11-120x92mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "bd4834",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.068996,
            "posY": 3.58451819,
            "posZ": 0.126303032,
            "rotX": 359.7663,
            "rotY": 239.985321,
            "rotZ": 359.989258,
            "scaleX": 1.04,
            "scaleY": 1.0,
            "scaleZ": 1.83
          },
          "Nickname": "832-90x52mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "dd0adf",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.93890953,
            "posY": 3.334336,
            "posZ": 0.07031571,
            "rotX": 358.9474,
            "rotY": 239.978546,
            "rotZ": 0.372854233,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "931-105x70mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "59f27a",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.064786,
            "posY": 3.610099,
            "posZ": 0.1033797,
            "rotX": 359.7143,
            "rotY": 239.98027,
            "rotZ": 0.09063534,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "131-25mm - 6 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740646/C9D769D610E774EEAA453BA6CA103B81322E154A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740755/3B176ED86ECFE9ADEF28A69ADAAA0648C7F96FCF/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.52098536,
                "y": 0.0147951972,
                "z": 0.8855548
              }
            },
            {
              "Position": {
                "x": 0.5557685,
                "y": 0.014747561,
                "z": 0.885464668
              }
            },
            {
              "Position": {
                "x": 2.693694,
                "y": 0.0149860429,
                "z": 0.885372
              }
            },
            {
              "Position": {
                "x": 1.6270566,
                "y": 0.0150925824,
                "z": -0.9145829
              }
            },
            {
              "Position": {
                "x": -0.47070843,
                "y": 0.0150792645,
                "z": -0.9144919
              }
            },
            {
              "Position": {
                "x": -2.64417148,
                "y": 0.0147573492,
                "z": -0.9143977
              }
            }
          ]
        },
        {
          "GUID": "813f3b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.107779,
            "posY": 3.519607,
            "posZ": 0.121143863,
            "rotX": 359.4968,
            "rotY": 239.978851,
            "rotZ": 359.927673,
            "scaleX": 1.04,
            "scaleY": 0.9999996,
            "scaleZ": 1.83
          },
          "Nickname": "812-90x52mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "12488e",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.8427825,
            "posY": 2.96407747,
            "posZ": 0.0448925346,
            "rotX": 358.147034,
            "rotY": 239.9962,
            "rotZ": 359.915619,
            "scaleX": 1.04,
            "scaleY": 1.00000012,
            "scaleZ": 1.04
          },
          "Nickname": "b32-70x25mm Bike- 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744567/E612584BBFB8F76F459AD8F776E066DDE290C941/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744673/4C1068A681616211DD93464EC51C2EC3A4D0180C/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.5713954,
                "y": 0.01357435,
                "z": -0.01069994
              }
            },
            {
              "Position": {
                "x": -0.520218849,
                "y": 0.0135232871,
                "z": -0.0106943706
              }
            },
            {
              "Position": {
                "x": 0.5358508,
                "y": 0.0134821991,
                "z": -0.0106929131
              }
            },
            {
              "Position": {
                "x": 1.58820844,
                "y": 0.0133735947,
                "z": -0.0106899831
              }
            },
            {
              "Position": {
                "x": 0.0099641,
                "y": 0.0135053685,
                "z": -1.90777123
              }
            },
            {
              "Position": {
                "x": -0.00444122544,
                "y": 0.0134973451,
                "z": 1.9455595
              }
            }
          ]
        },
        {
          "GUID": "234802",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.91655159,
            "posY": 3.30596566,
            "posZ": 0.0568337031,
            "rotX": 358.8605,
            "rotY": 239.976044,
            "rotZ": 0.249275625,
            "scaleX": 1.0,
            "scaleY": 1.0,
            "scaleZ": 1.0
          },
          "Nickname": "442-50mm - 9 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939741588/6850489D857237AFA403F17A0DF570FF8373496D/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 1.96080768,
                "y": 0.0149667347,
                "z": 1.94692338
              }
            },
            {
              "Position": {
                "x": 2.793297,
                "y": 0.0146450521,
                "z": -0.00206423923
              }
            },
            {
              "Position": {
                "x": 1.97733057,
                "y": 0.0148268864,
                "z": -1.96097267
              }
            },
            {
              "Position": {
                "x": 0.015091205,
                "y": 0.0148508316,
                "z": -2.79525638
              }
            },
            {
              "Position": {
                "x": -1.9527123,
                "y": 0.0150655387,
                "z": -1.97311628
              }
            },
            {
              "Position": {
                "x": -2.756926,
                "y": 0.0149901723,
                "z": -0.019297231
              }
            },
            {
              "Position": {
                "x": -1.95388484,
                "y": 0.0150734009,
                "z": 1.964628
              }
            },
            {
              "Position": {
                "x": 0.021645423,
                "y": 0.0149980923,
                "z": 2.77268
              }
            },
            {
              "Position": {
                "x": 0.009998515,
                "y": 0.0149739189,
                "z": 0.00262394943
              }
            }
          ]
        },
        {
          "GUID": "60e83f",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.04125,
            "posY": 3.50203371,
            "posZ": 0.09819963,
            "rotX": 359.540649,
            "rotY": 239.972809,
            "rotZ": 359.9282,
            "scaleX": 0.87,
            "scaleY": 1.0,
            "scaleZ": 1.52
          },
          "Nickname": "732-75x42mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "507868",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.110721,
            "posY": 3.65147638,
            "posZ": 0.132140055,
            "rotX": 359.894135,
            "rotY": 239.98764,
            "rotZ": 0.033174593,
            "scaleX": 1.39,
            "scaleY": 1.0,
            "scaleZ": 2.1
          },
          "Nickname": "913-105x70mm - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740391/B6EAC7A3C6930B05F79A1CEAA5EB9CD4AFB6122B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740516/E9022281F3C5956A13559771DB97CE362B33885D/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -2.12458563,
                "y": 0.01484811,
                "z": 0.004598252
              }
            },
            {
              "Position": {
                "x": -0.005412147,
                "y": 0.0147133786,
                "z": 0.00460919831
              }
            },
            {
              "Position": {
                "x": 2.11464572,
                "y": 0.014766302,
                "z": 0.00462026
              }
            }
          ]
        },
        {
          "GUID": "49f8a6",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.850931,
            "posY": 2.94665813,
            "posZ": 0.04783223,
            "rotX": 358.0507,
            "rotY": 239.982666,
            "rotZ": 359.896637,
            "scaleX": 1.05,
            "scaleY": 1.00000012,
            "scaleZ": 1.05
          },
          "Nickname": "b13-70x25mm Bike - 3 Slot - Line",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744771/F3E84AD237FA269AF87FC2C12C4C435A3CC589BD/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744860/E39D36A455FBF1B0AA7A6578920D88177776D43C/",
            "Convex": true,
            "MaterialIndex": 1,
            "TypeIndex": 1,
            "CastShadows": false
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.04019141,
                "y": -0.009801578,
                "z": 0.0145861311
              }
            },
            {
              "Position": {
                "x": -0.00386169716,
                "y": -0.009671901,
                "z": 0.0145876659
              }
            },
            {
              "Position": {
                "x": 1.05187953,
                "y": -0.0096998075,
                "z": 0.0145892166
              }
            }
          ]
        },
        {
          "GUID": "ad8d3b",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 8.063551,
            "posY": 3.547283,
            "posZ": 0.0910406858,
            "rotX": 359.692657,
            "rotY": 239.980515,
            "rotZ": 0.0138038909,
            "scaleX": 0.67,
            "scaleY": 0.9999996,
            "scaleZ": 0.67
          },
          "Nickname": "212-32mm - 3 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "b20ac1",
          "Name": "Custom_Model",
          "Transform": {
            "posX": 7.97320175,
            "posY": 3.35839248,
            "posZ": 0.0816607848,
            "rotX": 358.8623,
            "rotY": 239.975677,
            "rotZ": 0.252365261,
            "scaleX": 0.74,
            "scaleY": 1.0,
            "scaleZ": 1.23
          },
          "Nickname": "641-60x35mm - 9 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739292/374B282934CE0E7FC3BE7937E9CA5F3F94F95FD3/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739391/407FD9D1831A055378A223E1887B958B625952E3/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -4.16630554,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": -2.08488464,
                "y": 0.0149970055,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 0.0469512939,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 2.1348114,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 4.236786,
                "y": 0.0149960518,
                "z": 0.800033569
              }
            },
            {
              "Position": {
                "x": 3.177826,
                "y": 0.0149970055,
                "z": -1.01913452
              }
            },
            {
              "Position": {
                "x": 1.05006409,
                "y": 0.0149970055,
                "z": -1.00287819
              }
            },
            {
              "Position": {
                "x": -1.06588745,
                "y": 0.0149970055,
                "z": -1.01252556
              }
            },
            {
              "Position": {
                "x": -3.18476868,
                "y": 0.0149974823,
                "z": -1.0184269
              }
            }
          ]
        },
        {
          "GUID": "d635f8",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -0.315810472,
            "posY": 6.083476,
            "posZ": 13.259325,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 0.0,
            "scaleX": 0.4999998,
            "scaleY": 0.9999996,
            "scaleZ": 0.4999998
          },
          "Nickname": "111-25mm - 3 Slot - Ranks",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739497/31E276AA68B2356E7DD8FC69FB2C295E94917018/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939739615/6D6432CFF228DA65B93F2E16FEB91CF8710CB81A/",
            "Convex": false,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": -1.060041,
                "y": 0.0149612743,
                "z": 1.00000942
              }
            },
            {
              "Position": {
                "x": 1.06201649,
                "y": 0.0151622249,
                "z": 0.9547441
              }
            },
            {
              "Position": {
                "x": 0.006442888,
                "y": 0.0151842888,
                "z": -0.8760444
              }
            }
          ]
        },
        {
          "GUID": "118e89",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -0.315810472,
            "posY": 6.083476,
            "posZ": 13.259325,
            "rotX": 0.0,
            "rotY": 0.0,
            "rotZ": 0.0,
            "scaleX": 0.5,
            "scaleY": 1.0,
            "scaleZ": 0.5
          },
          "Nickname": "132-25mm - 6 Slot - Circle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": false,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": true,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740884/A3B1A5AA9189FF94165253DF2EE46F2F3D52CE16/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939740992/C500D3FF1E955FE7BB6DD15304476A9D93CC63A8/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 1,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[],\"apoc\":false}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 0.00298720459,
                "y": 0.0151446778,
                "z": -2.11086464
              }
            },
            {
              "Position": {
                "x": -2.01808071,
                "y": 0.0152005376,
                "z": -0.6391035
              }
            },
            {
              "Position": {
                "x": 0.0227308758,
                "y": 0.0149460789,
                "z": -0.0224551782
              }
            },
            {
              "Position": {
                "x": -1.24863911,
                "y": 0.0152996806,
                "z": 1.70525169
              }
            },
            {
              "Position": {
                "x": 1.24076784,
                "y": 0.0148857776,
                "z": 1.67648947
              }
            },
            {
              "Position": {
                "x": 2.00337768,
                "y": 0.0148737254,
                "z": -0.638144851
              }
            }
          ]
        },
        {
          "GUID": "be6a9c",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -0.06009468,
            "posY": 3.56663179,
            "posZ": 14.5257559,
            "rotX": 359.983063,
            "rotY": -0.00106092915,
            "rotZ": 359.920135,
            "scaleX": 0.51,
            "scaleY": 1.0,
            "scaleZ": 0.51
          },
          "Nickname": "c22-25mm+60mm - 4+1 Slots \t- \tCircle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738250/7C99AB524B22AB33922E69D971C575608735176A/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738412/A08D1EB5988C0467214633064972D6FFEC11318B/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\napoc=false\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID, svapoc=apoc})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        apoc= loaded_data.svapoc\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend",
          "LuaScriptState": "{\"svobjectListGUID\":[]}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 2.5337913,
                "y": 0.014955245,
                "z": 2.527838
              }
            },
            {
              "Position": {
                "x": 3.592037,
                "y": 0.0154198762,
                "z": -0.00165100151
              }
            },
            {
              "Position": {
                "x": -0.0006083416,
                "y": 0.0148601513,
                "z": 0.00010780985
              }
            },
            {
              "Position": {
                "x": 2.53051472,
                "y": 0.015367778,
                "z": -2.56167483
              }
            },
            {
              "Position": {
                "x": -3.575394,
                "y": 0.0149933854,
                "z": 0.0110716326
              }
            },
            {
              "Position": {
                "x": 0.009711203,
                "y": 0.0149151608,
                "z": 3.58653855
              }
            },
            {
              "Position": {
                "x": -2.53524017,
                "y": 0.0150093762,
                "z": -2.544864
              }
            },
            {
              "Position": {
                "x": 0.00412429543,
                "y": 0.01514378,
                "z": -3.589753
              }
            },
            {
              "Position": {
                "x": -2.552997,
                "y": 0.0147069292,
                "z": 2.53388834
              }
            }
          ]
        },
        {
          "GUID": "d3626d",
          "Name": "Custom_Model",
          "Transform": {
            "posX": -6.78570032,
            "posY": 3.575539,
            "posZ": 12.9450693,
            "rotX": 359.983124,
            "rotY": -0.000368154375,
            "rotZ": 359.920135,
            "scaleX": 0.51,
            "scaleY": 1.0,
            "scaleZ": 0.51
          },
          "Nickname": "c42-25mm+60mm - 8+1 Slots \t- \tCircle",
          "Description": "",
          "GMNotes": "",
          "ColorDiffuse": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "LayoutGroupSortIndex": 0,
          "Locked": false,
          "Grid": false,
          "Snap": false,
          "IgnoreFoW": false,
          "MeasureMovement": false,
          "DragSelectable": true,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "HideWhenFaceDown": false,
          "Hands": false,
          "CustomMesh": {
            "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738412/A08D1EB5988C0467214633064972D6FFEC11318B/",
            "DiffuseURL": "",
            "NormalURL": "",
            "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
            "Convex": true,
            "MaterialIndex": 0,
            "TypeIndex": 0,
            "CastShadows": true
          },
          "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
          "LuaScriptState": "{\"svobjectListGUID\":[]}",
          "XmlUI": "",
          "AttachedSnapPoints": [
            {
              "Position": {
                "x": 2.5337913,
                "y": 0.014955245,
                "z": 2.527838
              }
            },
            {
              "Position": {
                "x": 3.592037,
                "y": 0.0154198762,
                "z": -0.00165100151
              }
            },
            {
              "Position": {
                "x": -0.0006083416,
                "y": 0.0148601513,
                "z": 0.00010780985
              }
            },
            {
              "Position": {
                "x": 2.53051472,
                "y": 0.015367778,
                "z": -2.56167483
              }
            },
            {
              "Position": {
                "x": -3.575394,
                "y": 0.0149933854,
                "z": 0.0110716326
              }
            },
            {
              "Position": {
                "x": 0.009711203,
                "y": 0.0149151608,
                "z": 3.58653855
              }
            },
            {
              "Position": {
                "x": -2.53524017,
                "y": 0.0150093762,
                "z": -2.544864
              }
            },
            {
              "Position": {
                "x": 0.00412429543,
                "y": 0.01514378,
                "z": -3.589753
              }
            },
            {
              "Position": {
                "x": -2.552997,
                "y": 0.0147069292,
                "z": 2.53388834
              }
            }
          ]
        }
      ]
    },
    {
      "GUID": "ae92ee",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 6.500029,
        "posY": 1.47686446,
        "posZ": 15.0000362,
        "rotX": 0.0798778,
        "rotY": 89.99836,
        "rotZ": 359.983124,
        "scaleX": 1.04,
        "scaleY": 1.00000012,
        "scaleZ": 1.04
      },
      "Nickname": "70x25mm Bike - 1 Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742357/33A88AC85197FC0B32C4F6CF74DD6CAEBEF1979F/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939742493/ECB153043F5F0383401EB879EDB8A9162FD9A6E3/",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 1,
        "CastShadows": false
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "b67773",
      "Name": "PlayerPawn",
      "Transform": {
        "posX": 0.000216227374,
        "posY": 1.485845,
        "posZ": 8.500103,
        "rotX": 359.983,
        "rotY": -0.000532419246,
        "rotZ": 359.919861,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "MaterialIndex": 8,
      "LuaScript": "-- The name of the items in the bag MUST have the pattern ###-Name\r\n-- where ### are the digists of the options, one for every section\r\n-- (the digits can be 0 to 9, a to z in that order, lower case)\r\n-- and the Name could be whatever you want (even multiple words)\r\n\r\n-- Edit only the EDITABLE sections\r\n-- the spawning position is decided in the spawnItem() function\r\n\r\nsectionName={}\r\noptionsName={}\r\ndefaultSelected={}\r\n\r\n-- START EDITABLE DATA\r\n-- EDITABLE VARIABLES MAIN\r\nitemsBagGUID=\"e931a9\"\r\ninfiniteSpawning=true  -- TRUE the items will never run out, FALSE you can spawn only one copy of each item\r\nmainZoffset=0  -- the offset where the menu starts\r\nmainTitle=\"Apocalypse Movement Trays\"\r\ntotalSections=3 -- number of wanted sections\r\nspawnButtonText=\"SPAWN\"\r\nspawnZoneSize=1200\r\n-- EDITABLE VARIABLES 1\r\nsectionName[1]=\"Base Size\"\r\noptionsName[1]={\"25mm (Round)\",\"32mm (Round)\",\"40mm (Round)\",\"50mm (Round)\",\"60mm (Round)\",\"60x35mm (Oval)\",\"75x42mm (Oval)\",\"90x52mm (Oval)\",\"105x70mm (Oval)\",\"120x92mm (Oval)\",\"70x25m (Biker)\",\"60mm + 25mm (Special)\"}\r\ndefaultSelected[1]=1\r\n-- EDITABLE VARIABLES 2\r\nsectionName[2]=\"Number of Slots\"\r\noptionsName[2]={\"Three (3)\",\"Five (5)\",\"Six (6)\",\"Nine (9)\",\"Ten (10)\"}\r\ndefaultSelected[2]=1\r\n-- EDITABLE VARIABLES 3\r\nsectionName[3]=\"Slot Arrangement\"\r\noptionsName[3]={\"Ranked\",\"Circle\",\"Line\"}\r\ndefaultSelected[3]=1\r\n-- EDITABLE VARIABLES 4\r\nsectionName[4]=\"New Section\"\r\noptionsName[4]={\"Option1\",\"Option2\",\"Option3\"}\r\ndefaultSelected[4]=1\r\n-- EDITABLE VARIABLES 5\r\nsectionName[5]=\"New Section\"\r\noptionsName[5]={\"Option1\",\"Option2\",\"Option3\"}\r\ndefaultSelected[5]=1\r\n-- EDITABLE VARIABLES 6\r\nsectionName[6]=\"New Section\"\r\noptionsName[6]={\"Option1\",\"Option2\",\"Option3\"}\r\ndefaultSelected[6]=1\r\n-- EDITABLE VARIABLES 7\r\nsectionName[7]=\"New Section\"\r\noptionsName[7]={\"Option1\",\"Option2\",\"Option3\"}\r\ndefaultSelected[7]=1\r\n-- EDITABLE VARIABLES 8\r\nsectionName[8]=\"New Section\"\r\noptionsName[8]={\"Option1\",\"Option2\",\"Option3\"}\r\ndefaultSelected[8]=1\r\n-- EDITABLE VARIABLES 9\r\nsectionName[9]=\"New Section\"\r\noptionsName[9]={\"Option1\",\"Option2\",\"Option3\"}\r\ndefaultSelected[9]=1\r\n-- EDITABLE VARIABLES 10\r\nsectionName[10]=\"New Section\"\r\noptionsName[10]={\"Option1\",\"Option2\",\"Option3\"}\r\ndefaultSelected[10]=1\r\n\r\n-- EDITABLE VARIABLES SPAWN\r\nspawnZOffset=-0.75\r\nspawnZoneZOffset=-3\r\n-- END OF EDITABLE DATA\r\n\r\n\r\n-- COMMON VARIABLES\r\nmenuX=0\r\nmenuY=1.5\r\nmenuZ=2.5\r\narrowOffset=6\r\narrowWidth=600\r\ntextWidth=5000\r\ntextSize=300\r\nselected={}\r\nzOffset={}\r\nupBtn={}\r\ndownBtn={}\r\ntitleBtn={}\r\ntextBtn={}\r\n\r\n-- MAIN TITLE VARIABLES\r\ntitleZOffset=2\r\nmainTitleBtn={\r\n    index=1, label=mainTitle, click_function=\"none\", function_owner=self,\r\n    position={-menuX,menuY,titleZOffset*menuZ}, rotation={0,180,0}, height=800, width=6500,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\n\r\n-- OPTION 1 VARIABLES AND FUNCTIONS\r\nselected[1]=defaultSelected[1]\r\nupBtn[1]={\r\n    index=1, label=\"→\", click_function=\"up1\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[1]={\r\n    index=1, label=\"←\", click_function=\"down1\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[1]={\r\n    index=1, label=sectionName[1], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[1]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up1()\r\n    up(1)\r\nend\r\n\r\nfunction down1()\r\n    down(1)\r\nend\r\n\r\n-- OPTION 2 VARIABLES AND FUNCTIONS\r\nselected[2]=defaultSelected[2]\r\nupBtn[2]={\r\n    index=1, label=\"→\", click_function=\"up2\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[2]={\r\n    index=1, label=\"←\", click_function=\"down2\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[2]={\r\n    index=1, label=sectionName[2], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[2]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up2()\r\n    up(2)\r\nend\r\n\r\nfunction down2()\r\n    down(2)\r\nend\r\n\r\n-- OPTION 3 VARIABLES AND FUNCTIONS\r\nselected[3]=defaultSelected[3]\r\nupBtn[3]={\r\n    index=1, label=\"→\", click_function=\"up3\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[3]={\r\n    index=1, label=\"←\", click_function=\"down3\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[3]={\r\n    index=1, label=sectionName[3], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[3]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up3()\r\n    up(3)\r\nend\r\n\r\nfunction down3()\r\n    down(3)\r\nend\r\n-- OPTION 4 VARIABLES AND FUNCTIONS\r\nselected[4]=defaultSelected[4]\r\nupBtn[4]={\r\n    index=1, label=\"→\", click_function=\"up4\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[4]={\r\n    index=1, label=\"←\", click_function=\"down4\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[4]={\r\n    index=1, label=sectionName[4], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[4]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up4()\r\n    up(4)\r\nend\r\n\r\nfunction down4()\r\n    down(4)\r\nend\r\n\r\n-- OPTION 5 VARIABLES AND FUNCTIONS\r\nselected[5]=defaultSelected[5]\r\nupBtn[5]={\r\n    index=1, label=\"→\", click_function=\"up5\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[5]={\r\n    index=1, label=\"←\", click_function=\"down5\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[5]={\r\n    index=1, label=sectionName[5], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[5]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up5()\r\n    up(5)\r\nend\r\n\r\nfunction down5()\r\n    down(5)\r\nend\r\n\r\n-- OPTION 6 VARIABLES AND FUNCTIONS\r\nselected[6]=defaultSelected[6]\r\nupBtn[6]={\r\n    index=1, label=\"→\", click_function=\"up6\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[6]={\r\n    index=1, label=\"←\", click_function=\"down6\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[6]={\r\n    index=1, label=sectionName[6], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[6]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up6()\r\n    up(6)\r\nend\r\n\r\nfunction down6()\r\n    down(6)\r\nend\r\n\r\n-- OPTION 7 VARIABLES AND FUNCTIONS\r\nselected[7]=defaultSelected[7]\r\nupBtn[7]={\r\n    index=1, label=\"→\", click_function=\"up7\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[7]={\r\n    index=1, label=\"←\", click_function=\"down7\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[7]={\r\n    index=1, label=sectionName[7], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[7]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up7()\r\n    up(7)\r\nend\r\n\r\nfunction down7()\r\n    down(7)\r\nend\r\n\r\n-- OPTION 8 VARIABLES AND FUNCTIONS\r\nselected[8]=defaultSelected[8]\r\nupBtn[8]={\r\n    index=1, label=\"→\", click_function=\"up8\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[8]={\r\n    index=1, label=\"←\", click_function=\"down8\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[8]={\r\n    index=1, label=sectionName[8], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[8]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up8()\r\n    up(8)\r\nend\r\n\r\nfunction down8()\r\n    down(8)\r\nend\r\n-- OPTION 9 VARIABLES AND FUNCTIONS\r\nselected[9]=defaultSelected[9]\r\nupBtn[9]={\r\n    index=1, label=\"→\", click_function=\"up9\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[9]={\r\n    index=1, label=\"←\", click_function=\"down9\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[9]={\r\n    index=1, label=sectionName[9], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[9]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up9()\r\n    up(9)\r\nend\r\n\r\nfunction down9()\r\n    down(9)\r\nend\r\n-- OPTION 10 VARIABLES AND FUNCTIONS\r\nselected[10]=defaultSelected[10]\r\nupBtn[10]={\r\n    index=1, label=\"→\", click_function=\"up10\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ndownBtn[10]={\r\n    index=1, label=\"←\", click_function=\"down10\" , function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=450, width=arrowWidth,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\ntitleBtn[10]={\r\n    index=1, label=sectionName[10], click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=0, width=0,\r\n    font_size=300, color={0.5,0.5,0.5}, font_color={1,1,1}\r\n}\r\ntextBtn[10]={\r\n    index=1, label=\"\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=500, width=textWidth,\r\n    font_size=textSize, color={1,1,1}, font_color={0,0,0}\r\n}\r\n\r\nfunction up10()\r\n    up(10)\r\nend\r\n\r\nfunction down10()\r\n    down(10)\r\nend\r\n-- SPAWN BUTTON VARIABLES\r\nspawnBtn={\r\n    index=1, label=spawnButtonText, click_function=\"spawnItem\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=800, width=2000,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\n\r\n-- SPAWNING ZONE VARIABLES\r\nspawnZoneBtn={\r\n    index=1, label=\"X\", click_function=\"none\", function_owner=self,\r\n    position={0,0,0} --[[ auto set in writeMenus() function ]], rotation={0,180,0}, height=spawnZoneSize, width=spawnZoneSize,\r\n    font_size=500, color={0,0,0}, font_color={1,1,1}\r\n}\r\n-- MAIN CODE\r\nfunction onLoad(saved_data)\r\n    itemsBag=getObjectFromGUID(itemsBagGUID)\r\n\r\n    writeMenus()\r\nend\r\n\r\nfunction writeMenus()\r\n    self.clearButtons()\r\n    mainTitleBtn.position={-menuX,menuY,(mainZoffset)*menuZ}\r\n    self.createButton(mainTitleBtn)\r\n    for i=1, totalSections do\r\n        local listSelected=optionsName[i]\r\n        titleBtn[i].position={-menuX,menuY,((-i+mainZoffset)*menuZ)+1}\r\n        self.createButton(titleBtn[i])\r\n        textBtn[i].label=listSelected[selected[i]]\r\n        textBtn[i].position={-menuX,menuY,(-i+mainZoffset)*menuZ}\r\n        self.createButton(textBtn[i])\r\n        upBtn[i].position={-menuX-arrowOffset,menuY,(-i+mainZoffset)*menuZ}\r\n        self.createButton(upBtn[i])\r\n        downBtn[i].position={-menuX+arrowOffset,menuY,(-i+mainZoffset)*menuZ}\r\n        self.createButton(downBtn[i])\r\n    end\r\n    spawnBtn.position={-menuX,menuY,(-totalSections+spawnZOffset+mainZoffset)*menuZ}\r\n    spawnZoneBtn.position={-menuX,menuY,((-totalSections+spawnZOffset+mainZoffset)*menuZ)-3+spawnZoneZOffset}\r\n    self.createButton(spawnBtn)\r\n    self.createButton(spawnZoneBtn)\r\nend\r\n\r\nfunction up(index)\r\n    selected[index]=selected[index]+1\r\n    if selected[index] > #optionsName[index] then\r\n        selected[index]=1\r\n    end\r\n    writeMenus()\r\nend\r\n\r\nfunction down(index)\r\n    selected[index]=selected[index]-1\r\n    if selected[index] < 1 then\r\n        selected[index]= #optionsName[index]\r\n    end\r\n    writeMenus()\r\nend\r\n\r\nfunction spawnItem()\r\n    idChars={\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"}\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    spawnedItemPosition={positionSelf.x, positionSelf.y+2, (positionSelf.z-((totalSections+2)*menuZ*scaleSelf.z))+spawnZoneZOffset}\r\n    local found=false\r\n    local id=\"\"\r\n    for i=1, totalSections do\r\n        local currentList=optionsName[i] -- only to access the name of the first option later\r\n        if currentList[1] == \"None\" then\r\n                    id=id..tostring(idChars[selected[i]]) -- this is the case if trere is a \"zero selection\" option as \"None\" correspond to 0\r\n                else\r\n                    id=id..tostring(idChars[selected[i]+1])   -- this is the normal case\r\n                end\r\n    end\r\n    local list=itemsBag.getObjects()\r\n    for i, obj in ipairs(list) do\r\n        if string.sub(obj.name, 1, totalSections) == id then\r\n            local spawnedItem = itemsBag.takeObject({guid= obj.guid, position = spawnedItemPosition, rotation ={0,0,0}, smooth=false})\r\n            if infiniteSpawning then\r\n                local replacement=spawnedItem.clone({position={itemsBag.getPosition().x,itemsBag.getPosition().y-5,itemsBag.getPosition().z}})\r\n                itemsBag.putObject(replacement)\r\n            end\r\n            found=true\r\n            spawnedItem.setName(string.sub(spawnedItem.getName(), totalSections+2))\r\n            return\r\n        end\r\n    end\r\n    if found==false then\r\n        if infiniteSpawning then\r\n            broadcastToAll(\"MOVEMENT TRAY NOT AVAILABLE\", \"Red\")\r\n        else\r\n            broadcastToAll(\"ITEM NOT FOUND OR ALREADY SPAWNED\", \"Red\")\r\n        end\r\n    end\r\nend\r\n\r\nfunction none()\r\nend\r\n",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "884a5c",
      "Name": "3DText",
      "Transform": {
        "posX": 0.0,
        "posY": 1.60000181,
        "posZ": -11.0,
        "rotX": 90.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "How to use the Movement Trays\nStep 1: Select and spawn the desired tray.\nStep 2: Make sure your models have the \"Grid\" flag disabled.\nStep 3: Make sure your models have the \"Snap\" and \"Auto Raise\" flags enabled.\nStep 4: Put your models on the tray.\nStep 5: Making sure no other objects are too close to the tray, press the Lock button.",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "15b9b3",
      "Name": "3DText",
      "Transform": {
        "posX": -14.0,
        "posY": 1.60000181,
        "posZ": 17.0,
        "rotX": 90.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "These are specialised trays\nmade for Infantry Squads\nwith a Heavy Weapon Team.\nOne has 8x25mm and 1x60mm Slots.\nThe other has 4x25mm and 1x60mm Slots.\nThey are present in the spawner bag too.",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 50
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "a21ff9",
      "Name": "3DText",
      "Transform": {
        "posX": 14.0,
        "posY": 1.60000181,
        "posZ": 17.0,
        "rotX": 90.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "These are the single slot trays I used\nto make the rest of the trays.",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "388f5d",
      "Name": "3DText",
      "Transform": {
        "posX": 14.0000191,
        "posY": 1.60000181,
        "posZ": 7.0,
        "rotX": 90.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "Due to the janky nature\nof TTS physics \nand joints, I very\nVERY EXTREMELY STRONGLY\nRECCOMEND setting your game\nserver Physics setting to \"Locked\".\nIt should be set to that anyway\nto prevent accidental clumping.",
        "colorstate": {
          "r": 1.0,
          "g": 0.0,
          "b": 0.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "5cf19d",
      "Name": "3DText",
      "Transform": {
        "posX": -14.0000191,
        "posY": 1.60000181,
        "posZ": 7.0,
        "rotX": 90.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "Apocalypse mode causes the models\nto be deleted when the tray is deleted.\n\n40k mode leaves the models\nalone when the tray is deleted.\n\nKnown Issue: If you flip the tray\nwithout \"holding\" it first, it can cause\nit to float in the air or fall though \nthe world.\n\nSolution: Don't flip it without holding it.",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 64
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "2267d3",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.000188062259,
        "posY": 1.58680952,
        "posZ": 17.9999313,
        "rotX": 359.983063,
        "rotY": 0.016730817,
        "rotZ": 359.919952,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "Fallback Collider",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744948/6946544F86B86AD125B9CEEBE91551CF41477547/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939744948/6946544F86B86AD125B9CEEBE91551CF41477547/",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 1,
        "CastShadows": false
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "db6f11",
      "Name": "Custom_Model",
      "Transform": {
        "posX": 4.000032,
        "posY": 1.48034954,
        "posZ": 15.000042,
        "rotX": 0.07988606,
        "rotY": 89.99613,
        "rotZ": 359.983124,
        "scaleX": 0.5,
        "scaleY": 1.00000012,
        "scaleZ": 0.5
      },
      "Nickname": "Round - 1 Slot",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738131/EDB3F4722E6BAC5D688E72A244D88F87227A7382/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 1,
        "CastShadows": false
      },
      "LuaScript": "",
      "LuaScriptState": "",
      "XmlUI": ""
    },
    {
      "GUID": "ae5b73",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -4.891269,
        "posY": 1.49243021,
        "posZ": 13.9282885,
        "rotX": 359.983063,
        "rotY": -0.0001465437,
        "rotZ": 359.920135,
        "scaleX": 0.51,
        "scaleY": 1.0,
        "scaleZ": 0.51
      },
      "Nickname": "25mm+60mm - 4+1 Slots \t- \tCircle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738250/7C99AB524B22AB33922E69D971C575608735176A/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738412/A08D1EB5988C0467214633064972D6FFEC11318B/",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\napoc=false\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID, svapoc=apoc})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        apoc= loaded_data.svapoc\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend",
      "LuaScriptState": "{\"svobjectListGUID\":[]}",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 2.5337913,
            "y": 0.014955245,
            "z": 2.527838
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 3.592037,
            "y": 0.0154198762,
            "z": -0.00165100151
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.0006083416,
            "y": 0.0148601513,
            "z": 0.00010780985
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 2.53051472,
            "y": 0.015367778,
            "z": -2.56167483
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -3.575394,
            "y": 0.0149933854,
            "z": 0.0110716326
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 0.009711203,
            "y": 0.0149151608,
            "z": 3.58653855
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -2.53524017,
            "y": 0.0150093762,
            "z": -2.544864
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 0.00412429543,
            "y": 0.01514378,
            "z": -3.589753
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -2.552997,
            "y": 0.0147069292,
            "z": 2.53388834
          },
          "Tags": []
        }
      ]
    },
    {
      "GUID": "0a1eff",
      "Name": "Custom_Model",
      "Transform": {
        "posX": -4.999978,
        "posY": 1.494664,
        "posZ": 21.0005455,
        "rotX": 359.983124,
        "rotY": -0.0005692253,
        "rotZ": 359.920135,
        "scaleX": 0.51,
        "scaleY": 1.0,
        "scaleZ": 0.51
      },
      "Nickname": "25mm+60mm - 8+1 Slots \t- \tCircle",
      "Description": "",
      "GMNotes": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "LayoutGroupSortIndex": 0,
      "Locked": false,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738412/A08D1EB5988C0467214633064972D6FFEC11318B/",
        "DiffuseURL": "",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/786374678939738535/66C824BA48B0E4AA323A7D86154E7120E6B40D32/",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 0,
        "CastShadows": true
      },
      "LuaScript": "objectListGUID={}\r\nobjectList = {}\r\nflipWhenUnlock=true\r\n\r\nfunction onSave()\r\n    local saved_data = JSON.encode({svobjectListGUID=objectListGUID})\r\n    --saved_data = \"\"\r\n    return saved_data\r\nend\r\n\r\nfunction onLoad(saved_data)\r\n--Loads the tracking for if the game has started yet\r\n    if saved_data ~= \"\" then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        objectListGUID= loaded_data.svobjectListGUID\r\n        objectList = {}\r\n        for i, guid in ipairs(objectListGUID) do\r\n            table.insert(objectList,getObjectFromGUID(guid))\r\n        end\r\n    else\r\n        objectList = {}\r\n    end\r\n    writeButtons()\r\n  check_if_falling = Wait.time(checkfall, 1,-1)\r\nend\r\n\r\nfunction writeButtons()\r\n    self.clearButtons()\r\n    buttonOffset=7\r\n    oBounds = self.getBounds()\r\n    positionSelf = self.getPosition()\r\n    scaleSelf = self.getScale()\r\n    LockButten={index=1\r\n    , label=\"Lock\"\r\n    , click_function=\"lockStuff\"\r\n    , function_owner=self\r\n    , position={0,2,0}\r\n    , rotation={0,180,0}\r\n    , scale={x=1/scaleSelf.x,y=1,z=1/scaleSelf.z}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=500\r\n    , color={1,0,0}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Left Click to Lock for Apocalypse.\\nRight Click to Lock for 40k.\"\r\n    }\r\n    UnlockButten={index=2\r\n    , label=\"Unlock\"\r\n    , click_function=\"unlockStuff\"\r\n    , function_owner=self\r\n    , position={0,-0.1,0}\r\n    , rotation={0,180,180}\r\n    , scale={x=(1/scaleSelf.x)*0.25,y=0.25,z=(2/scaleSelf.z)*0.25}\r\n    , height=600\r\n    , width=1000\r\n    , font_size=300\r\n    , color={0,0,1}\r\n    , font_color={1,1,1}\r\n    , tooltip = \"Clear Joins\"\r\n    }\r\n    if #objectList == 0 then\r\n      self.createButton(LockButten)\r\n    end\r\n    self.createButton(UnlockButten)\r\nend\r\n\r\nfunction checkfall()\r\n  pos = self.getPosition()\r\n  if pos.y < -4 then\r\n    self.jointTo()\r\n    if objectList ~= nil then\r\n      for i,v in ipairs(objectList) do\r\n        objectList[i].interactable=true\r\n        objectList[i].jointTo()\r\n        objectList[i]=nil\r\n      end\r\n    end\r\n    if check_if_falling ~= nil then Wait.stop(check_if_falling) end\r\n    onLoad()\r\n  end\r\nend\r\n\r\nfunction unlockStuff()\r\n  self.jointTo()\r\n  if flipWhenUnlock then\r\n      self.flip()\r\n  end\r\n  for i,v in ipairs(objectList) do\r\n      if flipWhenUnlock then\r\n        local pos1=self.positionToLocal(objectList[i].getPosition())\r\n        objectList[i].flip()\r\n        objectList[i].setPosition(self.positionToWorld({-pos1[1],-pos1[2], pos1[3]}))\r\n      end\r\n    objectList[i].interactable=true\r\n    objectList[i].jointTo()\r\n    objectList[i]=nil\r\n  end\r\n  objectList={}\r\n  objectListGUID={}\r\n  self.script_state= onSave()\r\n  --onLoad()\r\n  writeButtons()\r\nend\r\n\r\nfunction lockStuff(obj, player_clicker_color, alt_click)\r\n  oBounds = self.getBoundsNormalized()\r\n  pos = self.getPosition()\r\n  scaleself = self.getPosition()\r\n  pos.y = pos.y+0.1\r\n  zoneSpawn = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallback'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n  zoneSpawnAlt = {position = pos\r\n  , scale = { oBounds.size.x*0.9, oBounds.size.y*0.04, oBounds.size.z*0.9}\r\n  , type = 'ScriptingTrigger'\r\n  , callback = 'zoneCallbackAlt'\r\n  , callback_owner = self\r\n  , rotation = self.getRotation() }\r\n\r\n  if alt_click == false then\r\n    spawnObject(zoneSpawn)\r\n  else spawnObject(zoneSpawnAlt)\r\n  end\r\nend\r\n\r\nfunction zoneCallback(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\n        object2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n    objectList[i].interactable=false\r\n  end\r\nend\r\n apoc=true\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction zoneCallbackAlt(zone)\r\n  trayGUID =  self.getGUID()\r\n  objectList={}\r\n  for _,o in ipairs(zone.getObjects()) do\r\n    table.insert(objectList,o)\r\n    table.insert(objectListGUID,o.getGUID())\r\n  end\r\n  self.script_state= onSave()\r\n  for i,v in ipairs(objectList) do\r\nobject2string = tostring(objectList[i].getGUID())\r\n if object2string~=trayGUID then\r\n objectList[i].jointTo(self, {\r\n      [\"type\"]        = \"Fixed\",\r\n      [\"collision\"]   = false\r\n    })\r\n  end\r\n  end\r\n apoc=false\r\n  zone.destruct()\r\n  self.removeButton(0)\r\nend\r\n\r\nfunction onDestroy()\r\n  if apoc==true then\r\n    for i,v in ipairs(objectList) do\r\n      destroyObject(objectList[i])\r\n    end\r\n  end\r\nend\r\n",
      "LuaScriptState": "{\"svobjectListGUID\":[]}",
      "XmlUI": "",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 2.5337913,
            "y": 0.014955245,
            "z": 2.527838
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 3.592037,
            "y": 0.0154198762,
            "z": -0.00165100151
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -0.0006083416,
            "y": 0.0148601513,
            "z": 0.00010780985
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 2.53051472,
            "y": 0.015367778,
            "z": -2.56167483
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -3.575394,
            "y": 0.0149933854,
            "z": 0.0110716326
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 0.009711203,
            "y": 0.0149151608,
            "z": 3.58653855
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -2.53524017,
            "y": 0.0150093762,
            "z": -2.544864
          },
          "Tags": []
        },
        {
          "Position": {
            "x": 0.00412429543,
            "y": 0.01514378,
            "z": -3.589753
          },
          "Tags": []
        },
        {
          "Position": {
            "x": -2.552997,
            "y": 0.0147069292,
            "z": 2.53388834
          },
          "Tags": []
        }
      ]
    }
  ]
}